C   ***** This file includes the regional or global GMPEs for Turkey ******* 

C  ***** PEER NGA MODELS ADJUSTED FOR TURKEY **********

c ------------------------------------------------------------------            
C *** Abrahamson and Silva (NGA-2008 Model) Horizontal ************
c ------------------------------------------------------------------            
      subroutine AS_NGA_2008TR ( mag, dip, fType, width, rRup, rjb,
     1                     vs30, hwflag, lnSa, sigma1, 
     2                     specT, period1, depthtop, iflag, vs30_class,
     3                     depthvs10, Rx )

      implicit none
     
      real mag, dip, fType, rRup, rjb, vs30, pgaRock,
     1       Rx, lnSa, sigma, tau, period1, sigma1, depthtop, width,
     2       depthvs10, Frv, Fn, specT, period0, vs30_rock, depthvs10rock
      integer hwflag, iflag, vs30_class

c     VS30 class is to distinguish between the sigma if the VS30 is measured
c     vs the VS30 being estimated from surface geology.
c         Vs30_class = 1 for measured 
c         Vs30_class = 0 for estimated

C     Set mechanism term and corresponding Frv and Fnm values.     
C     fType     Mechanism                      Rake
C     ------------------------------------------------------
C      -1       Normal                   -120 < Rake < -60.0
C     1, 0.5    Reverse and Rev/Obl        30 < Rake < 150.0
C     0,-0.5    Strike-Slip and NMl/Obl        Otherwise
C 
      if ( fType .eq. 1.0 ) then
        Frv = 1.0
        Fn = 0.0
      elseif ( fType .eq. 0.5 ) then
        Frv = 1.0
        Fn = 0.0
      elseif ( fType .eq. -1.0 ) then
        Frv = 0.0
        Fn = 1.0
      else
        Frv = 0.0
        Fn = 0.0
      endif
     
c     compute pga on rock
      period0 = 0.0
      pgaRock = 0.0
      vs30_rock = 1100.
      depthvs10rock = 0.006
      call AS_072007_modelTR ( mag, dip, width, rRup, rjb,
     1                     vs30_rock, pgaRock, Rx, lnSa, sigma, tau,
     2                     period0, depthTop, Frv, Fn, iflag, vs30_class,
     3                     depthvs10rock, hwflag )

      pgaRock = exp(lnSa)
      
c     compute Sa (given the PGA rock value)      
          call AS_072007_modelTR ( mag, dip, width, rRup, rjb,
     1                     vs30, pgaRock, Rx, lnSa, sigma, tau, 
     2                     specT, depthtop, Frv, Fn, iflag, vs30_class, 
     3                     depthvs10, hwflag )

      sigma1 = sqrt( sigma**2 + tau**2 )
      period1 = specT

c     Convert units spectral acceleration in gal                                
      lnSa = lnSa + 6.89                                             
      return
      end
c ----------------------------------------------------------------------

      subroutine AS_072007_modelTR ( mag, dip, width, rRup, rjb,
     1                     vs30, pgaRock, Rx, lnSa, sigma, tau, 
     2                     specT, depthtop, Frv, Fn, iflag, vs30_class,
     3                     z10, hwflag )

      implicit none

      integer MAXPER, i, i1, nPer      
      parameter (MAXPER=107)
      real a1(MAXPER), a2(MAXPER), a3(MAXPER), a4(MAXPER), a5(MAXPER),
     1     a8(MAXPER), c3_TA(MAXPER), a10(MAXPER), a11(MAXPER),
     1     a12(MAXPER), a13(MAXPER), a14(MAXPER), a15(MAXPER),
     1     c4(MAXPER), a16(MAXPER), a18(MAXPER),
     2     s1e(MAXPER), s2e(MAXPER), s1m(MAXPER), s2m(MAXPER), s3(MAXPER), s4(MAXPER)
      real period(MAXPER), b_soil(MAXPER), vLin(MAXPER)
      real sigma, tau,lnSa, pgaRock, vs30, rjb, rRup,
     1     dip, mag, sigcorr(MAXPER), taucorr(MAXPER), specT 
      real taper1, taper2, taper3, taper4, taper5
      real a1T, a2T, a3T, a5T, a8T, c3_TAT
      real a10T, a11T, a12T, a13T, a14T, a15T, a16T, a18T
      real c4T, a4T
      real s3T, s4T, s1T, s2T
      real sigcorrT, taucorrT, vLinT, b_soilT, sum, Frv, Fn
      real damp_dpga, sigamp, width, testv1, soilampTR
      real sigmanot, sigmanotPGA, taunot, taunotPGA, sigmaB, sigmaBPGA
      integer count1, count2, iflag, vs30_class, hwflag
      real n, c, z10, c2, e2, a21, a22, test, zhat
      real vHinge, R, period1, T6, depthtop, c1, v1, Rx, vs,
     1     soilamp

      data period / 0.0, -1.0, 0.01, 0.02, 0.022, 0.025, 0.029,
     1              0.03, 0.032, 0.035, 0.036, 0.04, 0.042, 0.044, 
     2              0.045, 0.046, 0.048, 0.05, 0.055, 0.06, 0.065, 
     3              0.067, 0.07, 0.075, 0.08, 0.085, 0.09, 0.095, 0.1, 
     4              0.11, 0.12, 0.13, 0.133, 0.14, 0.15, 0.16, 0.17, 
     5              0.18, 0.19, 0.2, 0.22, 0.24, 0.25, 0.26, 0.28, 0.29, 
     6              0.3, 0.32, 0.34, 0.35, 0.36, 0.38, 0.4, 0.42, 0.44,
     7              0.45, 0.46, 0.48, 0.5, 0.55, 0.6, 0.65, 0.667, 0.7,
     8              0.75, 0.8, 0.85, 0.9, 0.95, 1.0, 1.1, 1.2, 1.3, 1.4, 
     9              1.5, 1.6, 1.7, 1.8, 1.9, 2.0, 2.2, 2.4, 2.5, 2.6, 2.8, 
     1              3.0, 3.2, 3.4, 3.5, 3.6, 3.8, 4.0, 4.2, 4.4, 4.6, 4.8, 
     1              5.0, 5.5, 6.0, 6.5, 7.0, 7.5, 8.0, 8.5, 9.0, 9.5, 10.0 /
      data Vlin / 865.1, 400.0, 865.1, 865.1, 865.1, 865.1, 898.6, 
     1            907.8, 926.4, 953.6, 962.3, 994.5, 1008.9, 1022.0, 
     2           1028.0, 1033.8, 1044.3, 1053.5, 1071.5, 1082.8, 1088.3, 
     3           1089.1, 1089, 1085.7, 1079.2, 1070.1, 1059.0, 1046.3, 
     4           1032.5, 1002.5, 970.9, 939.1, 929.7, 907.8, 877.6, 
     5            848.7, 821.2, 795.3, 771.0, 748.2, 706.8, 670.6, 
     6            654.3, 639.0, 611.4, 598.9, 587.1, 565.9, 547.1, 
     7            538.6, 530.6, 516.0, 503.0, 491.5, 481.2, 476.5, 
     8            472.1, 463.9, 456.6, 441.6, 430.3, 421.7, 419.3, 
     9            415.2, 410.5, 407.0, 404.6, 402.9, 401.8, 400.0, 400.0,
     1            400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 
     1            400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0,
     2            400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 
     3            400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0,
     4            400.0, 400.0, 400.0, 400.0 /
      data b_soil / -1.186, -1.955, -1.186, -1.219, -1.232, -1.25,
     1              -1.269, -1.273, -1.281, -1.291, -1.295, -1.308,
     2              -1.315, -1.323, -1.326, -1.33, -1.338, -1.346, 
     3              -1.367, -1.391, -1.416, -1.426, -1.443, -1.471,
     4              -1.5, -1.53, -1.561, -1.592, -1.624, -1.687, -1.751,
     5              -1.813, -1.831, -1.873, -1.931, -1.988, -2.041,
     6              -2.093, -2.141, -2.188, -2.272, -2.347, -2.381,
     7              -2.412, -2.469, -2.494, -2.518, -2.558, -2.592,
     8              -2.607, -2.62, -2.641, -2.657, -2.668, -2.674,
     9              -2.676, -2.676, -2.675, -2.669, -2.643, -2.599,
     1              -2.543, -2.521, -2.476, -2.401, -2.319, -2.233,
     1              -2.142, -2.049, -1.955, -1.762, -1.57, -1.382, 
     2              -1.199, -1.025, -0.859, -0.703, -0.558, -0.423,
     3              -0.299, -0.086, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     4               0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
     5               0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 /
      
      data c4 / 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5,
     1          4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5,
     2          4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5,
     3          4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5,
     4          4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5,
     5          4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 
     6          4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5,
     7          4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5,
     8          4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5,
     9          4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5 /


      data a1 / 0.8039, 5.7578, 0.8109, 0.8554, 0.8785, 0.9139, 0.9520, 0.9617, 
     1          0.9747, 0.9953, 1.0031, 1.0370, 1.0556, 1.0754, 1.0860, 1.0950, 
     2          1.1146, 1.1331, 1.1850, 1.2374, 1.2867, 1.3040, 1.3296, 1.3751, 
     3          1.4158, 1.4538, 1.4877, 1.5278, 1.5628, 1.6179, 1.6603, 1.6889, 
     4          1.6953, 1.7051, 1.7155, 1.7190, 1.7141, 1.7064, 1.6991, 1.6870, 
     5          1.6716, 1.6550, 1.6463, 1.6374, 1.6193, 1.6101, 1.6008, 1.5845,
     6          1.5605, 1.5507, 1.5443, 1.5289, 1.5105, 1.4921, 1.4696, 1.4572,
     7          1.4449, 1.4207, 1.3972, 1.3406, 1.2866, 1.2349, 1.2178, 1.1851, 
     8          1.1370, 1.0903, 1.0449, 1.0006, 0.9574, 0.9152, 0.8276, 0.7517, 
     9          0.6653, 0.5850, 0.5099, 0.4394, 0.3727, 0.3094, 0.2492, 0.1917, 
     1          0.0837, -0.0163, -0.0637, -0.1096, -0.1973, -0.2801, -0.3586, 
     1         -0.4335, -0.4696, -0.5050, -0.5735, -0.6394, -0.7029, -0.7641, 
     2         -0.8234, -0.8808, -0.9364, -1.0689, -1.1931, -1.3102, -1.4212, 
     3         -1.5268, -1.6277, -1.7243, -1.8171, -1.9065, -1.9928 /

      data a2 / -0.9679, -0.9046, -0.9679, -0.9774, -0.9816, -0.9889, -0.9996, -1.0024, 
     1          -1.0079, -1.0160, -1.0187, -1.0289, -1.0337, -1.0383, -1.0406, -1.0427, 
     2          -1.0469, -1.0508, -1.0596, -1.0669, -1.0728, -1.0749, -1.0775, -1.0810, 
     3          -1.0833, -1.0847, -1.0851, -1.0847, -1.0833, -1.0781, -1.0702, -1.0600, 
     4          -1.0567, -1.0484, -1.0357, -1.0224, -1.0089, -0.9956, -0.9825, -0.9700, 
     5          -0.9473, -0.9282, -0.9202, -0.9133, -0.9030, -0.8997, -0.8974, -0.8906, 
     6          -0.8842, -0.8812, -0.8783, -0.8728, -0.8677, -0.8630, -0.8587, -0.8566, 
     7          -0.8546, -0.8509, -0.8475, -0.8400, -0.8338, -0.8286, -0.8270, -0.8242, 
     8          -0.8206, -0.8175, -0.8148, -0.8125, -0.8106, -0.8088, -0.8060, -0.8038, 
     9          -0.8020, -0.8006, -0.7995, -0.7985, -0.7977, -0.7970, -0.7965, -0.7960, 
     1          -0.7960, -0.7960, -0.7960, -0.7960, -0.7960, -0.7960, -0.7960, -0.7960, 
     1          -0.7960, -0.7960, -0.7960, -0.7960, -0.7960, -0.7960, -0.7960, -0.7960, 
     2          -0.7960, -0.7960, -0.7960, -0.7960, -0.7960, -0.7960, -0.7960, -0.7960, 
     3          -0.7960, -0.7960, -0.7960 /

      data a3 / 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 
     1          0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 
     2          0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 
     3          0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 
     4          0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 
     5          0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 
     6          0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 
     7          0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 
     8          0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 
     9          0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 
     1          0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 
     1          0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265 /

      data a4 / 0.470, 0.000, 0.470, 0.470, 0.470, 0.470, 0.470, 
     1     0.470, 0.470, 0.470, 0.470, 0.470, 0.470, 0.470, 0.470, 
     2     0.470, 0.470, 0.470, 0.470, 0.470, 0.470, 0.470, 0.470, 
     3     0.470, 0.470, 0.470, 0.470, 0.470, 0.470, 0.470, 0.470, 
     4     0.470, 0.470, 0.470, 0.470, 0.470, 0.470, 0.470, 0.468, 
     5     0.466, 0.463, 0.460, 0.459, 0.458, 0.455, 0.454, 0.453, 
     6     0.450, 0.448, 0.447, 0.446, 0.445, 0.443, 0.441, 0.440, 
     7     0.439, 0.438, 0.437, 0.435, 0.432, 0.429, 0.426, 0.426, 
     8     0.424, 0.422, 0.419, 0.417, 0.415, 0.414, 0.412, 0.407, 
     9     0.403, 0.400, 0.396, 0.393, 0.390, 0.387, 0.385, 0.382, 
     1     0.380, 0.371, 0.362, 0.358, 0.354, 0.347, 0.340, 0.333, 
     1     0.327, 0.324, 0.322, 0.316, 0.311, 0.306, 0.302, 0.297, 
     2     0.293, 0.289, 0.279, 0.271, 0.263, 0.255, 0.249, 0.242, 
     3     0.236, 0.230, 0.225, 0.220 /

      data a5 / -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, 
     1     -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, 
     1     -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, 
     1     -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, 
     1     -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, 
     1     -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, 
     1     -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, 
     1     -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, 
     1     -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, 
     1     -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, 
     1     -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, 
     1     -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, 
     1     -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, 
     1     -0.398, -0.398, -0.398, -0.398 /

      data a8 / -0.0372, -0.1200, -0.0372, -0.0372, -0.0372, -0.0372, -0.0372, 
     1          -0.0372, -0.0359, -0.0341, -0.0336, -0.0315, -0.0305, -0.0296, 
     2          -0.0292, -0.0287, -0.0279, -0.0271, -0.0252, -0.0235, -0.0219, 
     3          -0.0213, -0.0204, -0.0191, -0.0178, -0.0166, -0.0155, -0.0161, 
     4          -0.0166, -0.0177, -0.0187, -0.0196, -0.0205, -0.0226, -0.0254, 
     5          -0.0281, -0.0305, -0.0329, -0.0363, -0.0396, -0.0457, -0.0513, 
     6          -0.0539, -0.0564, -0.0612, -0.0634, -0.0656, -0.0690, -0.0722, 
     7          -0.0737, -0.0752, -0.0780, -0.0807, -0.0833, -0.0857, -0.0869, 
     8          -0.0881, -0.0903, -0.0924, -0.0975, -0.1020, -0.1062, -0.1076, 
     9          -0.1101, -0.1137, -0.1171, -0.1203, -0.1233, -0.1262, -0.1289, 
     1          -0.1346, -0.1399, -0.1447, -0.1492, -0.1534, -0.1573, -0.1610, 
     1          -0.1645, -0.1677, -0.1708, -0.1766, -0.1819, -0.1844, -0.1867, 
     2          -0.1912, -0.1954, -0.1993, -0.2030, -0.2047, -0.2064, -0.2097, 
     3          -0.2128, -0.2158, -0.2186, -0.2213, -0.2239, -0.2263, -0.2321, 
     4          -0.2374, -0.2422, -0.2467, -0.2509, -0.2548, -0.2585, -0.2619, 
     5          -0.2652, -0.2683 /

      data c3_TA / -0.1806, 0.0000, -0.1806, -0.1818, -0.1760, -0.1682, -0.1591, -0.1570, -0.1523, -0.1457, 
     1          -0.1437, -0.1360, -0.1325, -0.1292, -0.1276, -0.1260, -0.1229, -0.1200, -0.1139, -0.1083, -0.1031, 
     2          -0.1012, -0.0983, -0.0939, -0.0930, -0.0922, -0.0914, -0.0907, -0.0900, -0.0966, -0.1026, -0.1081, 
     3          -0.1097, -0.1132, -0.1180, -0.1293, -0.1399, -0.1498, -0.1593, -0.1682, -0.1921, -0.2139, -0.2242, 
     4          -0.2308, -0.2433, -0.2493, -0.2550, -0.2629, -0.2702, -0.2738, -0.2772, -0.2838, -0.2900, -0.2944, 
     5          -0.2985, -0.3006, -0.3025, -0.3063, -0.3100, -0.3152, -0.3199, -0.3242, -0.3256, -0.3283, -0.3320, 
     6          -0.3309, -0.3298, -0.3288, -0.3279, -0.3270, -0.3167, -0.3072, -0.2985, -0.2905, -0.2830, -0.2689, 
     7          -0.2556, -0.2431, -0.2312, -0.2200, -0.1965, -0.1750, -0.1650, -0.1553, -0.1370, -0.1200, -0.0953, 
     8          -0.0721, -0.0611, -0.0503, -0.0296, -0.0100, -0.0078, -0.0057, -0.0037, -0.0018, 0.0000, 0.0000, 
     9          0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000 /

      data a10 / 0.9445, 1.5390, 0.9445, 0.9834, 0.9988, 1.0200, 1.0424, 1.0471, 
     1           1.0566, 1.0684, 1.0731, 1.0884, 1.0967, 1.1061, 1.1097, 1.1144, 
     2           1.1238, 1.1333, 1.1581, 1.1864, 1.2159, 1.2277, 1.2477, 1.2808, 
     3           1.3150, 1.3504, 1.3870, 1.4236, 1.4613, 1.5357, 1.6112, 1.6843, 
     4           1.7030, 1.7466, 1.8071, 1.8670, 1.9225, 1.9773, 2.0277, 2.0773, 
     5           2.1655, 2.2440, 2.2794, 2.3114, 2.3702, 2.3956, 2.4201, 2.4598, 
     6           2.4930, 2.5074, 2.5195, 2.5380, 2.5510, 2.5584, 2.5601, 2.5599, 
     7           2.5574, 2.5513, 2.5395, 2.4914, 2.4236, 2.3429, 2.3123, 2.2504, 
     8           2.1493, 2.0407, 1.9282, 1.8104, 1.6908, 1.5705, 1.3254, 1.0829, 
     9           0.8465, 0.6170, 0.3991, 0.1914, -0.0037, -0.1852, -0.3544, -0.6072, 
     1          -0.8585, -0.9600, -0.9600, -0.9600, -0.9600, -0.9600, -0.9600, -0.9600, 
     1          -0.9600, -0.9600, -0.9600, -0.9600, -0.9600, -0.9600, -0.9518, -0.9360, 
     2          -0.9208, -0.8854, -0.8530, -0.8232, -0.7956, -0.7700, -0.7460, -0.7234, 
     3          -0.7021, -0.6820, -0.6630 /

      data a11 / 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
     1           0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
     2           0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
     3           0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
     4           0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
     5           0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
     6           0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
     7           0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
     8           0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
     9           0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 /

      data a12 / 0.0000, 0.0800, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 
     1           0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 
     2           0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 
     3           0.0000, 0.0000, 0.0043, 0.0081, 0.0117, 0.0127, 0.0150, 0.0181, 0.0210, 
     4           0.0237, 0.0262, 0.0287, 0.0309, 0.0352, 0.0391, 0.0409, 0.0427, 0.0460, 
     5           0.0475, 0.0491, 0.0519, 0.0546, 0.0559, 0.0572, 0.0596, 0.0619, 0.0641, 
     6           0.0662, 0.0672, 0.0681, 0.0700, 0.0719, 0.0761, 0.0800, 0.0800, 0.0800, 
     7           0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800,
     8           0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 
     9           0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 
     1           0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 
     1           0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800 /
      data a13 / -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, 
     1           -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, 
     2           -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, 
     3           -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, 
     4           -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, 
     5           -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, 
     6           -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, 
     7           -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, 
     8           -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, 
     9           -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, 
     1           -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, 
     1           -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, 
     2           -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, 
     3           -0.0600, -0.0600, -0.0600 /

      data a14 / 1.08, 0.7, 1.08, 1.08, 1.0925, 1.1092, 1.1287, 
     1         1.1331, 1.1416, 1.1533, 1.157, 1.1708, 1.1772, 1.1833, 
     1         1.1862, 1.1891, 1.1947, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 
     1         1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.1886, 1.1854,
     1         1.1781, 1.1683, 1.1591, 1.1505, 1.1424, 1.1347, 1.1274, 
     1         1.1138, 1.1015, 1.0956, 1.0901, 1.0795, 1.0745, 1.0697,
     1         1.0605, 1.0519, 1.0478, 1.0438, 1.0361, 1.0288, 1.0219,
     1         1.0153, 1.0121, 1.009, 1.0029, 0.9971, 0.9835, 0.9712,
     1         0.9598, 0.9561, 0.9493, 0.9395, 0.9303, 0.9217, 0.9135,
     1         0.9058, 0.8985, 0.885, 0.8726, 0.8612, 0.8507, 0.8409,
     1         0.8317, 0.8231, 0.815, 0.8073, 0.8, 0.7246, 0.6558, 
     1         0.6235, 0.5925, 0.5339, 0.4793, 0.4283, 0.3804, 0.3574,
     1         0.3352, 0.2924, 0.2518, 0.2133, 0.1765, 0.1413, 0.1077,
     1         0.0754, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 /

      data a15 / -0.3500, -0.3900, -0.3500, -0.3500, -0.3500, -0.3500, -0.3500, 
     1           -0.3500, -0.3500, -0.3500, -0.3500, -0.3500, -0.3500, -0.3500, 
     2           -0.3500, -0.3500, -0.3500, -0.3500, -0.3500, -0.3500, -0.3500, 
     3           -0.3500, -0.3500, -0.3500, -0.3500, -0.3500, -0.3500, -0.3500, 
     4           -0.3500, -0.3500, -0.3500, -0.3500, -0.3500, -0.3500, -0.3500, 
     5           -0.3500, -0.3500, -0.3500, -0.3500, -0.3500, -0.3500, -0.3500, 
     6           -0.3500, -0.3500, -0.3500, -0.3500, -0.3500, -0.3500, -0.3500, 
     7           -0.3500, -0.3500, -0.3500, -0.3500, -0.3432, -0.3368, -0.3337, 
     8           -0.3306, -0.3247, -0.3191, -0.3059, -0.2938, -0.2827, -0.2791, 
     9           -0.2725, -0.2629, -0.2539, -0.2455, -0.2376, -0.2301, -0.2230, 
     1           -0.2098, -0.1978, -0.1867, -0.1764, -0.1668, -0.1579, -0.1495, 
     1           -0.1416, -0.1341, -0.1270, -0.1138, -0.1017, -0.0961, -0.0906, 
     2           -0.0803, -0.0708, -0.0618, -0.0534, -0.0494, -0.0455, -0.0380, 
     3           -0.0309, -0.0242, -0.0177, -0.0116, -0.0057, 0.0000, 0.0000, 0.0000, 
     4            0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000 /

      data a16 / 0.9000, 0.6300, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 
     1           0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 
     2           0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 
     3           0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 
     4           0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 
     5           0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.8878, 0.8644, 0.8423, 0.8212, 
     6           0.8010, 0.7913, 0.7818, 0.7634, 0.7458, 0.7045, 0.6669, 0.6323, 0.6211, 
     7           0.6002, 0.5704, 0.5425, 0.5163, 0.4916, 0.4682, 0.4460, 0.4048, 0.3672, 
     8           0.3325, 0.3005, 0.2707, 0.2427, 0.2165, 0.1918, 0.1684, 0.1463, 0.1050, 
     9           0.0674, 0.0498, 0.0328, 0.0007, -0.0291, -0.0570, -0.0832, -0.0958, -0.1079, 
     1          -0.1313, -0.1535, -0.1746, -0.1947, -0.2139, -0.2323, -0.2500, -0.2500, -0.2500, 
     1          -0.2500, -0.2500, -0.2500, -0.2500, -0.2500, -0.2500, -0.2500, -0.2500 /

      data a18 / -0.0040, 0.0000, -0.0040, -0.0040, -0.0040, -0.0040, -0.0040, -0.0040, -0.0040, 
     1           -0.0040, -0.0040, -0.0040, -0.0042, -0.0044, -0.0045, -0.0046, -0.0048, -0.0050, 
     2           -0.0055, -0.0059, -0.0063, -0.0064, -0.0066, -0.0069, -0.0072, -0.0075, -0.0075, 
     3           -0.0075, -0.0075, -0.0075, -0.0075, -0.0075, -0.0075, -0.0075, -0.0075, -0.0075, 
     4           -0.0075, -0.0075, -0.0071, -0.0067, -0.0060, -0.0054, -0.0051, -0.0048, -0.0042, 
     5           -0.0040, -0.0037, -0.0033, -0.0028, -0.0026, -0.0024, -0.0020, -0.0016, -0.0013, 
     6           -0.0009, -0.0007, -0.0006, -0.0003, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 
     7           0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 
     8            0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 
     9            0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 
     1            0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 
     1            0.0000, 0.0000, 0.0000, 0.0000 /

      data s1e / 0.590, 0.590, 0.590, 0.590, 0.593, 0.598, 0.604, 0.605, 0.607, 0.610, 0.611, 
     1           0.615, 0.617, 0.619, 0.620, 0.620, 0.622, 0.623, 0.627, 0.630, 0.630, 0.630, 
     2           0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 
     3           0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 
     4           0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 
     5           0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 
     6           0.630, 0.630, 0.630, 0.630, 0.626, 0.623, 0.620, 0.617, 0.615, 0.612, 0.610, 
     7           0.608, 0.606, 0.604, 0.601, 0.597, 0.596, 0.594, 0.592, 0.589, 0.587, 0.584, 
     8           0.583, 0.582, 0.580, 0.578, 0.576, 0.575, 0.573, 0.572, 0.570, 0.580, 0.588, 
     9           0.596, 0.604, 0.611, 0.617, 0.624, 0.629, 0.635, 0.640 /

      data s2e / 0.470, 0.470, 0.470, 0.470, 0.472, 0.474, 0.477, 0.478, 0.479, 0.481, 0.481, 
     1           0.483, 0.484, 0.485, 0.486, 0.486, 0.487, 0.488, 0.489, 0.491, 0.493, 0.493, 
     2           0.494, 0.495, 0.497, 0.498, 0.499, 0.500, 0.501, 0.503, 0.504, 0.506, 0.506, 
     3           0.507, 0.509, 0.510, 0.511, 0.512, 0.513, 0.514, 0.516, 0.518, 0.518, 0.519, 
     4           0.521, 0.521, 0.522, 0.523, 0.524, 0.525, 0.525, 0.526, 0.527, 0.528, 0.529, 
     5           0.530, 0.530, 0.531, 0.532, 0.534, 0.535, 0.537, 0.537, 0.538, 0.539, 0.541, 
     6           0.542, 0.543, 0.544, 0.545, 0.547, 0.548, 0.550, 0.551, 0.552, 0.553, 0.555, 
     7           0.556, 0.557, 0.558, 0.559, 0.561, 0.562, 0.562, 0.564, 0.565, 0.566, 0.567, 
     8           0.568, 0.568, 0.569, 0.570, 0.574, 0.577, 0.581, 0.584, 0.587, 0.594, 0.601, 
     9           0.607, 0.613, 0.618, 0.623, 0.628, 0.632, 0.636, 0.640 /

      data s3 / 0.470, 0.420, 0.420, 0.420, 0.430, 0.443, 0.459, 0.462, 0.469, 0.478, 0.481, 
     1          0.492, 0.497, 0.502, 0.504, 0.506, 0.511, 0.515, 0.525, 0.534, 0.542, 0.545, 
     2          0.550, 0.550, 0.550, 0.550, 0.550, 0.550, 0.550, 0.550, 0.550, 0.550, 0.550, 
     3          0.550, 0.550, 0.543, 0.537, 0.531, 0.526, 0.520, 0.511, 0.502, 0.497, 0.493, 
     4          0.486, 0.482, 0.479, 0.472, 0.466, 0.463, 0.460, 0.454, 0.449, 0.444, 0.439, 
     5          0.437, 0.435, 0.430, 0.426, 0.416, 0.408, 0.399, 0.397, 0.392, 0.385, 0.378, 
     6          0.372, 0.366, 0.360, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 
     7          0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 
     8          0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 
     9          0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350 /

      data s4 / 0.300, 0.300, 0.300, 0.300, 0.301, 0.303, 0.305, 0.305, 0.306, 0.307, 0.308, 
     1          0.309, 0.309, 0.310, 0.310, 0.311, 0.311, 0.312, 0.313, 0.314, 0.315, 0.315,
     2          0.316, 0.317, 0.318, 0.318, 0.319, 0.320, 0.321, 0.322, 0.323, 0.324, 0.324,
     3          0.325, 0.326, 0.327, 0.327, 0.328, 0.329, 0.329, 0.331, 0.332, 0.332, 0.333,
     4          0.334, 0.334, 0.335, 0.335, 0.336, 0.337, 0.337, 0.338, 0.338, 0.339, 0.340,
     5          0.340, 0.340, 0.341, 0.341, 0.342, 0.343, 0.344, 0.345, 0.345, 0.346, 0.347,
     6          0.348, 0.349, 0.349, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350,
     7          0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350,
     8          0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350,
     9          0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350 /

      data s1m / 0.576, 0.576, 0.576, 0.576, 0.580, 0.585, 0.590, 0.591, 0.594, 0.597, 0.598, 
     1           0.602, 0.604, 0.606, 0.607, 0.607, 0.609, 0.610, 0.614, 0.617, 0.617, 0.617,
     2           0.617, 0.617, 0.617, 0.617, 0.617, 0.617, 0.617, 0.617, 0.617, 0.617, 0.617, 
     3           0.617, 0.616, 0.616, 0.615, 0.615, 0.615, 0.614, 0.613, 0.613, 0.612, 0.612,
     4           0.611, 0.611, 0.611, 0.610, 0.610, 0.610, 0.609, 0.609, 0.608, 0.608, 0.608,
     5           0.607, 0.607, 0.607, 0.606, 0.606, 0.605, 0.604, 0.604, 0.603, 0.602, 0.600,
     6           0.598, 0.597, 0.595, 0.594, 0.588, 0.582, 0.576, 0.571, 0.566, 0.561, 0.556,
     7           0.552, 0.548, 0.544, 0.540, 0.536, 0.534, 0.533, 0.530, 0.527, 0.524, 0.522,
     8           0.520, 0.519, 0.517, 0.515, 0.513, 0.511, 0.509, 0.509, 0.510, 0.525, 0.539,
     9           0.551, 0.562, 0.572, 0.581, 0.590, 0.598, 0.605, 0.612 /

      data s2m / 0.453, 0.453, 0.453, 0.453, 0.455, 0.457, 0.460, 0.461, 0.462, 0.464, 0.464, 
     1           0.466, 0.467, 0.468, 0.469, 0.469, 0.470, 0.471, 0.473, 0.475, 0.476, 0.477,
     2           0.478, 0.479, 0.480, 0.481, 0.483, 0.484, 0.485, 0.487, 0.488, 0.490, 0.490,
     3           0.491, 0.491, 0.492, 0.493, 0.493, 0.494, 0.495, 0.496, 0.496, 0.497, 0.497,
     4           0.498, 0.498, 0.499, 0.499, 0.500, 0.500, 0.500, 0.501, 0.501, 0.502, 0.502,
     5           0.503, 0.503, 0.503, 0.504, 0.504, 0.505, 0.506, 0.506, 0.506, 0.506, 0.505,
     6           0.505, 0.504, 0.504, 0.503, 0.502, 0.501, 0.499, 0.498, 0.497, 0.496, 0.495,
     7           0.493, 0.492, 0.491, 0.493, 0.495, 0.496, 0.497, 0.498, 0.500, 0.501, 0.502,
     8           0.503, 0.503, 0.504, 0.505, 0.510, 0.514, 0.517, 0.523, 0.529, 0.541, 0.552,
     9           0.562, 0.571, 0.579, 0.587, 0.594, 0.601, 0.607, 0.612 /
 
      data sigcorr / 1.000, 0.74, 1.000, 1.000, 0.998, 0.996, 0.992,
     1               0.991, 0.989, 0.987, 0.986, 0.982, 0.98, 0.978, 0.978,
     2               0.977, 0.975, 0.973, 0.969, 0.965, 0.961, 0.96, 0.957, 
     3               0.952, 0.946, 0.942, 0.937, 0.933, 0.929, 0.921, 0.914,
     4               0.908, 0.906, 0.902, 0.896, 0.891, 0.886, 0.882, 0.878,
     5               0.874, 0.866, 0.859, 0.856, 0.853, 0.847, 0.844, 0.841,
     6               0.836, 0.831, 0.829, 0.827, 0.823, 0.818, 0.815, 0.811, 
     7               0.81, 0.804, 0.794, 0.783, 0.759, 0.737, 0.717, 0.71, 
     8               0.698, 0.68, 0.664, 0.648, 0.634, 0.62, 0.607, 0.583, 
     9               0.561, 0.541, 0.522, 0.504, 0.488, 0.472, 0.458, 0.444, 
     1               0.431, 0.407, 0.385, 0.374, 0.364, 0.346, 0.328, 0.312, 
     2               0.296, 0.289, 0.282, 0.268, 0.255, 0.243, 0.231, 0.22,
     3               0.209, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2 /
      data taucorr / 1.000, 0.74, 1.000, 1.000, 0.998, 0.996, 0.992,
     1               0.991, 0.989, 0.987, 0.986, 0.982, 0.98, 0.978, 0.978,
     2               0.977, 0.975, 0.973, 0.969, 0.965, 0.961, 0.96, 0.957, 
     3               0.952, 0.946, 0.942, 0.937, 0.933, 0.929, 0.921, 0.914,
     4               0.908, 0.906, 0.902, 0.896, 0.891, 0.886, 0.882, 0.878,
     5               0.874, 0.866, 0.859, 0.856, 0.853, 0.847, 0.844, 0.841,
     6               0.836, 0.831, 0.829, 0.827, 0.823, 0.818, 0.815, 0.811, 
     7               0.81, 0.804, 0.794, 0.783, 0.759, 0.737, 0.717, 0.71, 
     8               0.698, 0.68, 0.664, 0.648, 0.634, 0.62, 0.607, 0.583, 
     9               0.561, 0.541, 0.522, 0.504, 0.488, 0.472, 0.458, 0.444, 
     1               0.431, 0.407, 0.385, 0.374, 0.364, 0.346, 0.328, 0.312, 
     2               0.296, 0.289, 0.282, 0.268, 0.255, 0.243, 0.231, 0.22,
     3               0.209, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2 /
      
      n = 1.18
      c = 1.88
      sigamp = 0.30
      vHinge = 450

C Find the requested spectral period and corresponding coefficients
      nPer = 105

C First check for the PGA, PGV, PGD cases 
      if (specT .le. 0.0) then
        if ( specT .eq. 0.0 ) i1=1
        if ( specT .eq. -1. ) i1=2
         period1 = period(i1)
         a1T = a1(i1)
         a2T = a2(i1)
         a3T = a3(i1)
         a4T = a4(i1)
         a5T = a5(i1)
         a8T = a8(i1)
         c3_TAT = c3_TA(i1)
         a10T = a10(i1)
         a11T = a11(i1)
         a12T = a12(i1)
         a13T = a13(i1)
         a14T = a14(i1)
         a15T = a15(i1)
         a16T = a16(i1)
         a18T = a18(i1)
         c4T = c4(i1)
         b_soilT = b_soil(i1)
         vLinT   = vLin(i1)
         if (vs30_class .eq. 0) then
            s1T = s1e(i1)
            s2T = s2e(i1)
         elseif (vs30_class .eq. 1) then
            s1T = s1m(i1)
            s2T = s2m(i1)
         endif
         s3T = s3(i1)
         s4T = s4(i1)
         taucorrT = taucorr(i1)
         sigcorrT = sigcorr(i1)
         goto 1011
      endif

C   For other periods, loop over the spectral period range of the attenuation relationship.
      do i=3,nper-1+2
         if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
            count1 = i
            count2 = i+1
            goto 1020 
         endif
      enddo

C Selected spectral period is outside range defined by attenuaton model.
      write (*,*) 
      write (*,*) 'Abrahamson and Silva (NGA-2008-TR) Horizontal'
      write (*,*) 'attenuation model is not defined for a '
      write (*,*) ' spectral period of: ' 
      write (*,'(a10,f10.5)') ' Period = ',specT
      write (*,*) 'This spectral period is outside the defined'
      write (*,*) 'period range in the code or beyond the range'
      write (*,*) 'of spectral periods for interpolation.'
      write (*,*) 'Please check the input file.'
      write (*,*) 
      stop 99

C Interpolate the coefficients for the requested spectral period.
 1020       call interp (period(count1),period(count2),a1(count1),a1(count2),
     +                   specT,a1T,iflag)
            call interp (period(count1),period(count2),a2(count1),a2(count2),
     +                   specT,a2T,iflag)
            call interp (period(count1),period(count2),a3(count1),a3(count2),
     +                   specT,a3T,iflag)
            call interp (period(count1),period(count2),a4(count1),a4(count2),
     +                   specT,a4T,iflag)
            call interp (period(count1),period(count2),a5(count1),a5(count2),
     +                   specT,a5T,iflag)
            call interp (period(count1),period(count2),a8(count1),a8(count2),
     +                   specT,a8T,iflag)
            call interp (period(count1),period(count2),c3_TA(count1),c3_TA(count2),
     +                   specT,c3_TAT,iflag)
            call interp (period(count1),period(count2),a10(count1),a10(count2),
     +                   specT,a10T,iflag)
            call interp (period(count1),period(count2),a11(count1),a11(count2),
     +                   specT,a11T,iflag)
            call interp (period(count1),period(count2),a12(count1),a12(count2),
     +                   specT,a12T,iflag)
            call interp (period(count1),period(count2),a13(count1),a13(count2),
     +                   specT,a13T,iflag)
            call interp (period(count1),period(count2),a14(count1),a14(count2),
     +                   specT,a14T,iflag)
            call interp (period(count1),period(count2),a15(count1),a15(count2),
     +                   specT,a15T,iflag)
            call interp (period(count1),period(count2),a16(count1),a16(count2),
     +                   specT,a16T,iflag)
            call interp (period(count1),period(count2),a18(count1),a18(count2),
     +                   specT,a18T,iflag)
            call interp (period(count1),period(count2),c4(count1),c4(count2),
     +                   specT,c4T,iflag)
            call interp (period(count1),period(count2),b_soil(count1),b_soil(count2),
     +                   specT,b_soilT,iflag)
            call interp (period(count1),period(count2),vLin(count1),vLin(count2),
     +                   specT,vLinT,iflag)
c            call interp (period(count1),period(count2),vHinge(count1),vHinge(count2),
c     +                   specT,vHingeT,iflag)

            if (vs30_class .eq. 0) then 
               call interp (period(count1),period(count2),s1e(count1),s1e(count2),
     +                   specT,s1T,iflag)
               call interp (period(count1),period(count2),s2e(count1),s2e(count2),
     +                   specT,s2T,iflag)
            elseif (vs30_class .eq. 1) then
               call interp (period(count1),period(count2),s1m(count1),s1m(count2),
     +                   specT,s1T,iflag)
               call interp (period(count1),period(count2),s2m(count1),s2m(count2),
     +                   specT,s2T,iflag)
            endif
            call interp (period(count1),period(count2),s3(count1),s3(count2),
     +                   specT,s3T,iflag)
            call interp (period(count1),period(count2),s4(count1),s4(count2),
     +                   specT,s4T,iflag)
            call interp (period(count1),period(count2),sigcorr(count1),sigcorr(count2),
     +                   specT,sigcorrT,iflag)
            call interp (period(count1),period(count2),taucorr(count1),taucorr(count2),
     +                   specT,taucorrT,iflag)

 1011 period1 = specT                                                                                                              
 
c     Set distance (Eq. 3)
      R = sqrt(rRup**2 + c4T**2)
 
C     Set the 5 taper models (Eq. 8-12)
C     Taper 1 (Eq. 8)
      if ( rjb .ge. 30. ) then
         taper1 = 0.
      else
         taper1 = (30. - rjb) / 30.
      endif

c     Taper 2 (Eq. 9)
      if ( abs(dip) .eq. 90.0 .or. Rx .gt. width*cos(abs(dip)*3.14159/180.0) ) then
         taper2 = 1.
       else
         taper2 = 0.5 + Rx/(2.0*width*cos(abs(dip)*3.14159/180.0))
       endif

c     Set Taper 3 (Eq. 10)
      if (Rx .ge. DepthTop) then
         taper3 = 1.0
      else
         taper3 = Rx/depthTop      
      endif

c     Set Taper 4 (Eq. 11)
      if ( mag .ge. 7. ) then
        taper4 = 1.0
      elseif ( mag .gt. 6.0) then
        taper4 = (mag-6.0)
      else
        taper4 = 0.0
      endif

c     Set Taper 5 (Eq. 12)
c      if ( abs(dip) .lt. 70. ) then
c        taper5 = 1.
c      else
c        taper5 = 1. - (abs(dip)-70.)/20.
c      endif
C     Modification of Taper5 model from N. Abrahamson (per com. 6/2010)
      if ( abs(dip) .lt. 30. ) then
        taper5 = 1.
      else
        taper5 = 1. - (abs(dip)-30.)/60.
      endif
      	  
C     Base Model (Eq. 2)
      c1 = 6.75
       if ( mag .le. c1 ) then
        sum = a1T + a4T*(Mag-c1) + a8T*(8.5-Mag)**2 + (a2T + a3T*(Mag-c1))*alog(R)
       else
        sum = a1T + a5T*(Mag-c1) + a8T*(8.5-Mag)**2 + (a2T + a3T*(Mag-c1))*alog(R)
       endif

c     style of faulting
      sum = sum + a12T*Frv + a13T*Fn
      
c     Site response
c     Set Velocity for break in slope (Eq. 6)
      if ( specT .ge. 2.0) then
	    v1 = 700.
      elseif ( specT .gt. 1.00 ) then
	    v1 = exp(6.76-0.297*alog(specT))
      elseif ( specT .gt. 0.50 ) then
	    v1 = exp(8.0-0.795*alog(specT/0.21))
      elseif (specT .eq. -1.0) then
	    v1 = 862.0
      elseif (specT .eq. -2.0) then
	    v1 = 700.0
      else
            v1 = 1500.
      endif

C     Set the Vs30* (Eq. 5)
      if ( vs30 .lt. v1 ) then
	    vs = vs30
      else
	    vs = v1
      endif		

c     Compute site amplification (Eq. 4)   
      if (vs30 .lt. vLinT) then
          soilamp = a10T*alog(vs/vLinT) - 1.0*b_soilT*alog(c+pgaRock) 
     1              + b_soilT*alog(pgaRock+c*((vs/vLinT)**(n)) )
      else
     	  soilamp = (a10T + b_soilT*n) * alog(vs/vLinT)
      endif
      sum = sum + soilamp
      
c     Add Turkey site amplification correction
      
     	  soilampTR = (c3_TAT) * alog(vs/vHinge)
      sum = sum + soilampTR
      
C     Soil Depth Model
C     (Eq. 17)
      if (vs30 .lt. 180) then
         zhat = exp(6.745)
      elseif (vs30 .le. 500.0) then
         zhat = exp(6.745-1.35*alog(vs30/180.0) )
      else
         zhat = exp(5.394-4.48*alog(vs30/500.0) )
      endif
      
C     (Eq. 19)
      if (vs30 .gt. 1000 .or. specT .lt. 0.35) then
         e2 = 0.0
      elseif (specT .ge. 0.35 .and. specT .le. 2.0) then
         e2 = -0.25*alog(vs30/1000)*alog(specT/0.35)
      else
         e2 = -0.25*alog(vs30/1000)*alog(2.00/0.35)
      endif
      
C     (Eq. 20)
      if (specT .ge. 2.0) then
         a22 = 0.0625*(specT-2.00)
      else
         a22 = 0.0
      endif
      
C     Test Value for Eq. 18
      c2 = 50.0
      if (v1 .lt. 1000.0) then
         testv1 = v1
      else
         testv1 = 1000.0
      endif
      
      test = (a10T+b_soilT*n)*alog(vs/(testv1)) + 
     1        e2*alog((z10*1000.0+c2)/(zhat+c2))

C     (Eq. 18)
      if (vs30 .ge. 1000.0) then 
         a21 = 0.0
      elseif (test .lt. 0.0) then
         a21 = -1.0*(a10T+b_soilT*n)*alog(vs/testv1) /
     1           alog((z10*1000.0+c2)/(zhat+c2))
      else
         a21 = e2
      endif
      
C     (Eq. 16)
      if (z10*1000.0 .ge. 200) then
         sum = sum + a21*alog((z10*1000.0+c2)/(zhat+c2)) + 
     1               a22*alog(z10*1000.0/200.0)
      else
         sum = sum+ a21*alog((z10*1000.0+c2)/(zhat+c2))
      endif

c     Hanging wall Model (Eq. 7)
      if ( HWFlag .eq. 1 ) then
        sum = sum + a14T * taper1 * taper2 * taper3 * taper4 * taper5
      endif
	
c     Depth to top of Rupture Model
C     (Eq. 13)
      if (depthTop .le. 10.) then 
            sum = sum +a16T*depthtop/10.0
         else
            sum = sum + a16T
      endif    

C     Large Distance Model
C     (Eq. 15)
      if (mag .lt. 5.5) then
         T6 = 1.0
      elseif (mag .le. 6.5) then
         T6 = 0.5*(6.5 - mag) + 0.5
      else
         T6 = 0.5
      endif
C     (Eq. 14)
      if (Rrup .lt. 100.0) then
         sum = sum
      else
         sum = sum + a18T*(Rrup - 100.0)*T6 
      endif

C     Set the Sigma Values
c     Compute parital derivative of alog(soil amp) w.r.t. alog(rock PGA)
c     (Eq. 26)
      if ( vs30 .ge. vLinT) then
        dAmp_dPGA = 0.
      else
        dAmp_dPGA = b_soilT*pgaRock * ( -1. / (pgaRock+c) 
     1              + 1./ (pgaRock + c*(vs30/vLinT)**(n)) )
      endif
      
c     (Eq. 27)
      if (mag .lt. 5.0) then
         sigmanot = s1T
         if (vs30_class .eq. 0) then
            sigmanotPGA = s1e(1)
         else
            sigmanotPGA = s1m(1)
         endif
      elseif (mag .le. 7.0) then
         sigmanot = s1T + ((s2T-s1T)/2.0)*(mag-5.0)
         if (vs30_class .eq. 0) then
            sigmanotPGA = s1e(1) + ((s2e(1)-s1e(1))/2.0)*(mag-5.0)
         else
            sigmanotPGA = s1m(1) + ((s2m(1)-s1m(1))/2.0)*(mag-5.0)
         endif
      else
         sigmanot = s2T
         if (vs30_class .eq. 0) then
            sigmanotPGA = s2e(1)
         else
            sigmanotPGA = s2m(1)
         endif
      endif
      
c     (Eq. 28)
      if (mag .lt. 5.0) then
         taunot = s3T
         taunotPGA = s3(1)
      elseif (mag .le. 7.0) then
         taunot = s3T + ((s4T-s3T)/2.0)*(mag-5.0)
         taunotPGA = s3(1) + ((s4(1)-s3(1))/2.0)*(mag-5.0)
      else
         taunot = s4T
         taunotPGA = s4(1)
      endif
      
C     (Eq. 23)
      sigmaB = sqrt(sigmanot*sigmanot - sigamp*sigamp)
      sigmaBPGA = sqrt(sigmanotPGA*sigmanotPGA - sigamp*sigamp)

C     (Eq. 24)
      sigma = sqrt( sigmaB**2 + sigAmp**2 + (dAmp_dPGA * sigmaBPGA)**2
     1        + 2. * dAmp_dPGA * sigmaBPGA * sigmaB * sigCorrT )

C     (Eq. 25)
      tau = sqrt( taunot**2 + (dAmp_dPGA * taunotPGA)**2
     1        + 2. * dAmp_dPGA * taunotPGA * taunot * tauCorrT )

c     Set total to return
      lnSa = sum

      return
      end

c ---------------------------------------------------------------------            
C ** Chiou and Youngs (NGA-2008 Model) Horizontal **
c ---------------------------------------------------------------------            
      Subroutine CY_NGA_2008TR ( m, Rrup, Rbjf, specT,
     1                     period2, lnY, sigma, iflag, 
     2                     vs, Delta, DTor, Ftype, depthvs10, vs30_class,
     3                     hwflag, Rx )

      implicit none

      integer MAXPER, i, nPer
      parameter (MAXPER=107)
      REAL Period(MAXPER), C1(MAXPER), C1a(MAXPER), C1b(MAXPER)
      REAL cn(MAXPER), cm(MAXPER), c5(MAXPER), c6(MAXPER)
      REAL c7(MAXPER), c9(MAXPER), gamma1(MAXPER), gamma2(MAXPER)
      REAL c1_TA(MAXPER), c2_TA(MAXPER), c3_TA(MAXPER)
      REAL phi1(MAXPER), phi2(MAXPER), phi3(MAXPER), phi4(MAXPER)
      REAL phi5(MAXPER), phi6(MAXPER), phi7(MAXPER), phi8(MAXPER)
      REAL tau1(MAXPER), tau2(MAXPER), sigma1(MAXPER), sigma2(MAXPER)
      REAL sigma3(MAXPER), c9a(MAXPER)
 
      REAL c1T, c1aT, c1bT, cnT, cmT, c5T, c6T, c7T, c9T, c9aT
      REAL c1_TAT, c3_TAT, c2_TAT, d, vHinge
      REAL gamma1T, gamma2T, phi1T, phi2T, phi3T, phi4T, sigma3T
      REAL phi5T, phi6T, phi7T, phi8T, tau1T, tau2T, sigma1T, sigma2T
      REAL c2, c3, c4, c4a, cRB, cHM, gm, pi, d2r, gamma
      real cc, cosdelta, r1, r2, r3, r4, hw, psa_ref, psa, a, b, c
      integer iflag, count1, count2, hwflag, vs30_class
      REAL M, RRUP, RBJF, DTOR, Delta, specT, sigma, Ftype, Rx
      REAL period2, lnY, F_RV, F_NM, depthvs10, sigma_M, tau, NL, rkdepth
      real vs, period1

      data period / 0.0, -1.0, 0.01, 0.02, 0.022, 0.025, 0.029, 0.03, 0.032, 0.035, 0.036, 0.04, 
     1              0.042, 0.044, 0.045, 0.046, 0.048, 0.05, 0.055, 0.06, 0.065, 0.067, 
     1              0.07, 0.075, 0.08, 0.085, 0.09, 0.095, 0.1, 0.11, 0.12, 0.13, 0.133, 
     1              0.14, 0.15, 0.16, 0.17, 0.18, 0.19, 0.2, 0.22, 0.24, 0.25, 0.26, 
     1              0.28, 0.29, 0.3, 0.32, 0.34, 0.35, 0.36, 0.38, 0.4, 0.42, 0.44, 
     1              0.45, 0.46, 0.48, 0.5, 0.55, 0.6, 0.65, 0.667, 0.7, 0.75, 0.8, 0.85, 
     1              0.9, 0.95, 1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.0, 2.2, 
     1              2.4, 2.5, 2.6, 2.8, 3.0, 3.2, 3.4, 3.5, 3.6, 3.8, 4.0, 4.2, 4.4, 4.6, 
     1              4.8, 5.0, 5.5, 6.0, 6.5, 7.0, 7.5, 8.0, 8.5, 9.0, 9.5, 10.0 /
      data c1    / -1.2687, 2.2884, -1.268694, -1.251478, -1.238087, -1.216428, -1.18418, 
     1   -1.174374, -1.154467, -1.123314, -1.111874, -1.067114,
     1   -1.043071, -1.018824, -1.00656, -0.994327, -0.970216, 
     1   -0.946391, -0.889485, -0.836096, -0.787293, -0.769389, 
     1   -0.743954, -0.705072, -0.670827, -0.640929, -0.6151, 
     1   -0.593104, -0.574699, -0.545283, -0.527572, -0.519988, 
     1   -0.520317, -0.522696, -0.530869, -0.544692, -0.562955, 
     1   -0.584664, -0.608982, -0.635236, -0.689254, -0.746535, 
     1   -0.776564, -0.806831, -0.866612, -0.897204, -0.92776, 
     1   -0.987694, -1.046911, -1.076381, -1.10551, -1.162283, 
     1   -1.217597, -1.271357, -1.323477, -1.348959, -1.373988, 
     1   -1.422616, -1.469453, -1.578991, -1.678576, -1.769127, 
     1   -1.797932, -1.8516, -1.927839, -1.998837, -2.06549, 
     1   -2.128468, -2.188278, -2.245326, -2.352111, -2.451947, 
     1   -2.547437, -2.640124, -2.730652, -2.818867, -2.904397, 
     1   -2.986847, -3.065866, -3.141253, -3.281536, -3.409571, 
     1   -3.469751, -3.527743, -3.637785, -3.741264, -3.838964, 
     1   -3.931396, -3.975878, -4.019205, -4.102464, -4.181358, 
     1   -4.256034, -4.326756, -4.39387, -4.457747, -4.518726, 
     1   -4.660582, -4.789382, -4.907897, -5.018331, -5.12243, 
     1   -5.221536, -5.316573, -5.40817, -5.496751, -5.587222 /

      data c1a   / 0.1, 0.1094, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 
     1   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 
     1   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 
     1   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 
     1   0.1, 0.1, 0.0999, 0.0999, 0.0999, 0.0999, 0.0999, 
     1   0.0998, 0.0998, 0.0998, 0.0997, 0.0996, 0.0995, 
     1   0.0995, 0.0994, 0.0993, 0.0991, 0.0986, 0.0978, 
     1   0.0968, 0.0963, 0.0954, 0.0936, 0.0914, 0.0887, 
     1   0.0853, 0.0813, 0.0766, 0.0651, 0.0512, 0.0355, 
     1   0.0188, 0.0022, -0.0135, -0.0275, -0.0399, -0.0504, 
     1   -0.0591, -0.0722, -0.0808, -0.084, -0.0866, -0.0905, 
     1   -0.0931, -0.0949, -0.0962, -0.0967, -0.0971, -0.0978, 
     1   -0.0982, -0.0986, -0.0989, -0.0991, -0.0993, -0.0994,
     1   -0.0996, -0.0998, -0.0998, -0.0999, -0.0999, -0.0999, 
     1   -0.1, -0.1, -0.1, -0.1 /

      data c1b   / -0.2550, -0.0626, -0.255, -0.255, -0.255, -0.255, -0.255, -0.255, 
     1   -0.255, -0.255, -0.255, -0.255, -0.255, -0.255, 
     1   -0.255, -0.255, -0.255, -0.255, -0.255, -0.255, 
     1   -0.2547, -0.254, -0.254, -0.254, -0.254, -0.254, 
     1   -0.254, -0.253, -0.253, -0.2529, -0.252, -0.251, 
     1   -0.251, -0.2504, -0.25, -0.249, -0.248, -0.247, 
     1   -0.246, -0.2449, -0.2428, -0.24, -0.2382, -0.237, 
     1   -0.2343, -0.2328, -0.2313, -0.2275, -0.2247, -0.2226, 
     1   -0.2214, -0.218, -0.2146, -0.2107, -0.2073, -0.2054, 
     1   -0.2037, -0.2008, -0.1972, -0.1889, -0.1814, -0.1744, 
     1   -0.1722, -0.168, -0.162, -0.1564, -0.1511, -0.1472, 
     1   -0.1432, -0.14, -0.1337, -0.1282, -0.1246, -0.1214, 
     1   -0.1184, -0.1166, -0.114, -0.1125, -0.1111, -0.11, 
     1   -0.108, -0.107, -0.106, -0.106, -0.105, -0.104, -0.104, 
     1   -0.103, -0.103, -0.103, -0.102, -0.102, -0.102, -0.102, 
     1   -0.102, -0.101, -0.101, -0.101, -0.101, -0.101, -0.101, 
     1   -0.101, -0.1, -0.1, -0.1, -0.1, -0.1 /

      data cn    / 2.996, 1.648, 2.996, 3.2924, 3.3516, 3.4293, 3.5012, 3.5137, 
     1   3.5331, 3.5512, 3.5549, 3.563, 3.5627, 3.5607, 
     1   3.5594, 3.5574, 3.5526, 3.5473, 3.5308, 3.5129, 
     1   3.493, 3.4844, 3.4714, 3.448, 3.4232, 3.3966, 
     1   3.3689, 3.3407, 3.312, 3.2549, 3.1992, 3.1447, 
     1   3.1288, 3.0932, 3.0436, 2.997, 2.9522, 2.91, 
     1   2.8701, 2.8312, 2.7596, 2.6916, 2.6579, 2.6256, 
     1   2.5637, 2.5334, 2.5048, 2.4487, 2.397, 2.3719, 
     1   2.348, 2.3034, 2.2611, 2.2218, 2.1848, 2.1672, 
     1   2.15, 2.1178, 2.0868, 2.0174, 1.957, 1.9036, 
     1   1.8868, 1.8554, 1.8119, 1.7727, 1.7368, 1.7039, 
     1   1.6747, 1.648, 1.6046, 1.5717, 1.5462, 1.5263, 
     1   1.511, 1.4984, 1.4889, 1.4814, 1.4744, 1.4698, 
     1   1.4625, 1.458, 1.4562, 1.456, 1.455, 1.4557, 1.4565, 
     1   1.4581, 1.4594, 1.4606, 1.463, 1.4652, 1.4676, 
     1   1.4703, 1.4733, 1.4752, 1.4779, 1.4831, 1.4878, 
     1   1.4923, 1.4955, 1.4975, 1.499, 1.5, 1.501, 1.501, 1.502 /

      data cM    / 4.1840, 4.2979, 4.184, 4.1879, 4.1828, 4.1734, 4.1593, 4.1556, 
     1   4.1485, 4.1382, 4.1351, 4.1226, 4.1174, 4.1123, 4.1104, 
     1   4.1084, 4.1038, 4.1011, 4.094, 4.0892, 4.0867, 4.086, 
     1   4.086, 4.086, 4.0873, 4.0899, 4.0938, 4.0985, 4.103, 
     1   4.1144, 4.1277, 4.1416, 4.1459, 4.1565, 4.1717, 4.1871, 
     1   4.2023, 4.2172, 4.2323, 4.2476, 4.2759, 4.3042, 4.3184, 
     1   4.332, 4.3584, 4.3712, 4.3844, 4.4086, 4.4323, 4.4441, 
     1   4.4557, 4.4768, 4.4979, 4.5172, 4.5361, 4.5452, 4.5545, 
     1   4.5712, 4.5881, 4.6273, 4.6632, 4.6959, 4.7071, 4.7276, 
     1   4.7571, 4.7851, 4.8114, 4.8362, 4.8597, 4.882, 4.9245, 
     1   4.9641, 5.0013, 5.0367, 5.0697, 5.1019, 5.1325, 5.1623, 
     1   5.1905, 5.2173, 5.2691, 5.3173, 5.3393, 5.361, 5.4013, 
     1   5.4385, 5.4737, 5.5069, 5.5229, 5.5382, 5.5687, 5.5977, 
     1   5.6252, 5.6518, 5.6776, 5.7027, 5.7276, 5.7855, 5.8404, 
     1   5.8924, 5.9422, 5.9891, 6.0339, 6.077, 6.1172, 6.1561, 6.193 /

      data c5    / 6.16, 5.17, 6.16, 6.158, 6.158, 6.157, 6.1558, 6.155, 6.1545, 
     1   6.153, 6.153, 6.1508, 6.1497, 6.1487, 6.1477, 6.147, 
     1   6.1459, 6.1441, 6.1409, 6.1362, 6.1314, 6.1294, 6.126, 
     1   6.12, 6.1144, 6.1072, 6.1007, 6.0929, 6.085, 6.0683, 
     1   6.0494, 6.0296, 6.0237, 6.0087, 5.9871, 5.9647, 5.9416, 
     1   5.9177, 5.8942, 5.8699, 5.8231, 5.7767, 5.7547, 5.7335, 
     1   5.6917, 5.6719, 5.6527, 5.6163, 5.5832, 5.5681, 5.5528, 
     1   5.5252, 5.4997, 5.4764, 5.4555, 5.4458, 5.4362, 5.4189, 
     1   5.4029, 5.3697, 5.3431, 5.3213, 5.3149, 5.3045, 5.29, 
     1   5.2788, 5.2692, 5.2607, 5.2537, 5.248, 5.2387, 5.2321, 
     1   5.2266, 5.2224, 5.2194, 5.2166, 5.214, 5.2125, 5.2111, 
     1   5.2099, 5.208, 5.206, 5.206, 5.205, 5.2043, 5.204, 5.203, 
     1   5.203, 5.203, 5.2024, 5.202, 5.202, 5.202, 5.2017, 5.201, 
     1   5.201, 5.201, 5.201, 5.201, 5.201, 5.201, 5.2, 5.2, 5.2, 
     1   5.2, 5.2, 5.2 /

      data c6    / 0.4893, 0.4407, 0.4893, 0.4892, 0.4892, 0.4891, 0.4891, 0.489, 0.489, 
     1   0.4889, 0.4889, 0.4888, 0.4887, 0.4887, 0.4886, 0.4886, 0.4885, 
     1   0.4884, 0.4883, 0.488, 0.4878, 0.4876, 0.4875, 0.4872, 0.4869, 
     1   0.4865, 0.4862, 0.4858, 0.4854, 0.4846, 0.4837, 0.4828, 0.4825, 
     1   0.4818, 0.4808, 0.4797, 0.4787, 0.4776, 0.4765, 0.4755, 0.4735, 
     1   0.4715, 0.4706, 0.4698, 0.468, 0.4673, 0.4665, 0.4651, 0.4638, 
     1   0.4632, 0.4626, 0.4616, 0.4607, 0.4598, 0.4591, 0.4587, 0.4583, 
     1   0.4578, 0.4571, 0.456, 0.455, 0.4542, 0.454, 0.4536, 0.4531, 
     1   0.4528, 0.4524, 0.4522, 0.4519, 0.4517, 0.4514, 0.4511, 0.451, 
     1   0.4508, 0.4507, 0.4506, 0.4505, 0.4504, 0.4504, 0.4504, 0.4503, 
     1   0.4502, 0.4502, 0.4502, 0.4502, 0.4501, 0.4501, 0.4501, 0.4501, 
     1   0.4501, 0.4501, 0.4501, 0.4501, 0.4501, 0.4501, 0.45, 0.45, 
     1   0.45, 0.45, 0.45, 0.45, 0.45, 0.45, 0.45, 0.45, 0.45, 0.45 /

      data c7    / 0.0512, 0.0207, 0.0512, 0.0512, 0.0512, 0.0512, 0.0511, 0.0511, 0.0511, 0.051, 
     1   0.0509, 0.0508, 0.0507, 0.0506, 0.0506, 0.0505, 0.0505, 0.0504, 
     1   0.0502, 0.05, 0.0499, 0.0498, 0.0497, 0.0495, 0.0494, 0.0492, 
     1   0.0491, 0.049, 0.0489, 0.0486, 0.0484, 0.0482, 0.0482, 0.0481, 
     1   0.0479, 0.0477, 0.0476, 0.0474, 0.0473, 0.0471, 0.0468, 0.0466, 
     1   0.0464, 0.0463, 0.046, 0.0459, 0.0458, 0.0455, 0.0453, 0.0452, 
     1   0.045, 0.0448, 0.0445, 0.0442, 0.0439, 0.0437, 0.0436, 0.0432, 
     1   0.0429, 0.0421, 0.0412, 0.0404, 0.0401, 0.0395, 0.0387, 0.0379, 
     1   0.0372, 0.0364, 0.0357, 0.035, 0.0336, 0.0322, 0.0308, 0.0294, 
     1   0.028, 0.0266, 0.0253, 0.024, 0.0227, 0.0213, 0.0188, 0.0165, 
     1   0.0154, 0.0144, 0.0124, 0.0106, 0.009, 0.0076, 0.0069, 0.0063, 
     1   0.0052, 0.0041, 0.0033, 0.0025, 0.0019, 0.0014, 0.001, 0.0002, 
     1   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 /

      data c9    / 0.79, 0.3079, 0.79, 0.8129, 0.8188, 0.828, 0.8407, 0.8439, 0.8502, 0.8594, 
     1   0.8624, 0.874, 0.8795, 0.8848, 0.8874, 0.8899, 0.8949, 0.8996, 
     1   0.9105, 0.9204, 0.9292, 0.9325, 0.9371, 0.9442, 0.9505, 0.9559, 
     1   0.9606, 0.9645, 0.9677, 0.9718, 0.9733, 0.9725, 0.9719, 0.9699, 
     1   0.966, 0.9609, 0.9549, 0.9482, 0.941, 0.9334, 0.9179, 0.9023, 
     1   0.8946, 0.8871, 0.8726, 0.8657, 0.859, 0.8462, 0.8342, 0.8284, 
     1   0.8228, 0.8121, 0.8019, 0.7922, 0.783, 0.7786, 0.7743, 0.7659, 
     1   0.7578, 0.7391, 0.7221, 0.7065, 0.7015, 0.6922, 0.6788, 0.6662, 
     1   0.654, 0.6423, 0.6308, 0.6196, 0.5975, 0.5756, 0.5538, 0.532, 
     1   0.5101, 0.4877, 0.4649, 0.4412, 0.4169, 0.3917, 0.339, 0.2833, 
     1   0.2546, 0.2262, 0.1722, 0.1244, 0.0846, 0.0538, 0.042, 0.0322, 
     1   0.0177, 0.0086, 0.0031, 0.0004, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
     1   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 /

      data c9a   / 1.5005, 2.6690, 1.500502, 1.502755, 1.503506, 1.504559, 1.506667, 1.507119, 
     1   1.508175, 1.510438, 1.511043, 1.513765, 1.515734, 1.517706, 
     1   1.518617, 1.519528, 1.521353, 1.523027, 1.529743, 1.535875, 
     1   1.542802, 1.546354, 1.551621, 1.55971, 1.567842, 1.579171, 
     1   1.590105, 1.600474, 1.610428, 1.638367, 1.664459, 1.692658, 
     1   1.702334, 1.724608, 1.754879, 1.784789, 1.819388, 1.852804, 
     1   1.884759, 1.915732, 1.9806, 2.041531, 2.070935, 2.098242, 
     1   2.150499, 2.175808, 2.200534, 2.246784, 2.284621, 2.302971, 
     1   2.321004, 2.355846, 2.388582, 2.412588, 2.435617, 2.446846, 
     1   2.457882, 2.479359, 2.500023, 2.533749, 2.564594, 2.589332, 
     1   2.595295, 2.606478, 2.622426, 2.636626, 2.645606, 2.65382, 
     1   2.661527, 2.66899, 2.677276, 2.685052, 2.690965, 2.694735, 
     1   2.698511, 2.701481, 2.703372, 2.705265, 2.706889, 2.708514, 
     1   2.710139, 2.711766, 2.712308, 2.712851, 2.713665, 2.714479, 
     1   2.715022, 2.715293, 2.715565, 2.715836, 2.716108, 2.71638, 
     1   2.716651, 2.716651, 2.716923, 2.716923, 2.717195, 2.717466, 
     1   2.717466, 2.717738, 2.717738, 2.717738, 2.71801, 2.71801, 
     1   2.71801, 2.71801, 2.71801 /

      data gamma1  / -0.00804, -0.00275, -0.00804, -0.008113, -0.008155, -0.00823, -0.008351, 
     1      -0.008387, -0.008454, -0.008564, -0.008599, -0.008754, 
     1      -0.008833, -0.008906, -0.008945, -0.008984, -0.00905, 
     1      -0.009121, -0.009288, -0.009433, -0.009561, -0.009603, 
     1      -0.009656, -0.009733, -0.009782, -0.009808, -0.009809, 
     1      -0.009788, -0.009753, -0.009627, -0.00946, -0.009269, 
     1      -0.009205, -0.009054, -0.008832, -0.00861, -0.008398, 
     1      -0.008183, -0.007976, -0.007776, -0.007397, -0.007044, 
     1      -0.006877, -0.006715, -0.006408, -0.006263, -0.006123, 
     1      -0.005859, -0.005614, -0.005497, -0.005386, -0.005175, 
     1      -0.00498, -0.004799, -0.004632, -0.004552, -0.004477, 
     1      -0.004332, -0.004199, -0.003903, -0.003652, -0.003435, 
     1      -0.003368, -0.003246, -0.003078, -0.002929, -0.002795, 
     1      -0.002674, -0.002564, -0.002464, -0.002287, -0.002138, 
     1      -0.00201, -0.001898, -0.001802, -0.001717, -0.001643, 
     1      -0.001578, -0.001519, -0.001467, -0.001381, -0.001311, 
     1      -0.001281, -0.001255, -0.001209, -0.001172, -0.001142, 
     1      -0.001117, -0.001106, -0.001096, -0.001079, -0.001065, 
     1      -0.001052, -0.001042, -0.001032, -0.001024, -0.001016, 
     1      -0.000999, -0.000987, -0.000977, -0.000968, -0.000961, 
     1      -0.000955, -0.00095, -0.000945, -0.000941, -0.000937 /

      data gamma2  / -0.00785, -0.00625, -0.00785, -0.007921, -0.007962, -0.008035, -0.008154, 
     1      -0.008189, -0.008255, -0.008362, -0.008396, -0.008547, 
     1      -0.008624, -0.008696, -0.008734, -0.008771, -0.008836, 
     1      -0.008906, -0.009068, -0.00921, -0.009335, -0.009376, 
     1      -0.009428, -0.009503, -0.00955, -0.009577, -0.009577, 
     1      -0.009557, -0.009522, -0.0094, -0.009236, -0.00905, 
     1      -0.008988, -0.00884, -0.008623, -0.008406, -0.008199, 
     1      -0.007989, -0.007787, -0.007592, -0.007222, -0.006878, 
     1      -0.006714, -0.006556, -0.006257, -0.006115, -0.005979, 
     1      -0.00572, -0.005481, -0.005368, -0.005259, -0.005053, 
     1      -0.004862, -0.004686, -0.004522, -0.004445, -0.004371, 
     1      -0.00423, -0.0041, -0.003811, -0.003565, -0.003354, 
     1      -0.003288, -0.003169, -0.003005, -0.00286, -0.002729, 
     1      -0.002611, -0.002504, -0.002406, -0.002233, -0.002087, 
     1      -0.001962, -0.001854, -0.001759, -0.001677, -0.001604, 
     1      -0.00154, -0.001483, -0.001433, -0.001348, -0.00128, 
     1      -0.001251, -0.001225, -0.001181, -0.001145, -0.001115, 
     1      -0.001091, -0.00108, -0.001071, -0.001054, -0.00104, 
     1      -0.001027, -0.001017, -0.001007, -0.000999, -0.000992, 
     1       -0.000976, -0.000964, -0.000954, -0.000945, -0.000938, 
     1      -0.000933, -0.000927, -0.000923, -0.000919, -0.000914 /

      data phi1   / -0.4417, -0.7861, -0.4417, -0.434, -0.4313, -0.4267, -0.4196, -0.4177, 
     1    -0.4139, -0.4082, -0.4064, -0.4, -0.3973, -0.3949, -0.3939, 
     1    -0.393, -0.3914, -0.3903, -0.3892, -0.3903, -0.3934, -0.3951, 
     1    -0.3981, -0.404, -0.4108, -0.4182, -0.4261, -0.4341, -0.4423, 
     1    -0.4585, -0.4743, -0.4892, -0.4935, -0.5032, -0.5162, -0.5283, 
     1    -0.5396, -0.5502, -0.5602, -0.5697, -0.5873, -0.6034, -0.6109, 
     1    -0.6182, -0.6319, -0.6383, -0.6444, -0.6559, -0.6665, -0.6715, 
     1    -0.6762, -0.685, -0.6931, -0.7005, -0.7072, -0.7104, -0.7135, 
     1    -0.7193, -0.7246, -0.7365, -0.7468, -0.7557, -0.7585, -0.7636, 
     1    -0.7708, -0.7773, -0.7833, -0.7888, -0.7941, -0.799, -0.8082, 
     1    -0.8165, -0.8243, -0.8315, -0.8382, -0.8445, -0.8504, -0.856, 
     1    -0.8613, -0.8663, -0.8755, -0.8836, -0.8874, -0.8909, -0.8974, 
     1    -0.9032, -0.9083, -0.913, -0.9151, -0.917, -0.9205, -0.9231, 
     1    -0.9249, -0.9257, -0.9255, -0.9243, -0.9222, -0.9129, -0.8982, 
     1    -0.8791, -0.8572, -0.8346, -0.8126, -0.7914, -0.7711, -0.7517, -0.7332 /

      data phi2   / -0.1417, -0.0699, -0.1417, -0.1364, -0.1361, -0.1365, -0.1392, -0.1403, -0.143, 
     1    -0.1482, -0.1502, -0.1591, -0.1641, -0.1694, -0.1721, -0.1748, 
     1    -0.1804, -0.1862, -0.2008, -0.2153, -0.2291, -0.2344, -0.242, 
     1    -0.2538, -0.2644, -0.2739, -0.2819, -0.2887, -0.2943, -0.3025, 
     1    -0.3077, -0.3106, -0.3111, -0.3118, -0.3113, -0.3093, -0.3062, 
     1    -0.3022, -0.2976, -0.2927, -0.2823, -0.2716, -0.2662, -0.2609, 
     1    -0.2505, -0.2455, -0.2405, -0.231, -0.222, -0.2177, -0.2135, 
     1    -0.2053, -0.1975, -0.1901, -0.183, -0.1795, -0.1762, -0.1696, 
     1    -0.1633, -0.1487, -0.1353, -0.1232, -0.1194, -0.1124, -0.1028, 
     1    -0.0943, -0.0869, -0.0805, -0.0748, -0.0699, -0.0617, -0.0552, 
     1    -0.0501, -0.0459, -0.0425, -0.0395, -0.0369, -0.0346, -0.0323, 
     1    -0.0302, -0.0262, -0.0225, -0.0207, -0.019, -0.0159, -0.0129, 
     1    -0.0102, -0.0077, -0.0066, -0.0055, -0.0036, -0.0016, 0.0, 0.0, 
     1    0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 /

      data phi3   / -0.007010, -0.008444, -0.00701, -0.007279, -0.007301, -0.007364, -0.007378, -0.007354, 
     1    -0.007281, -0.007162, -0.007129, -0.006977, -0.006878, -0.006765, 
     1    -0.00671, -0.006656, -0.006556, -0.006467, -0.006279, -0.006117, 
     1    -0.00597, -0.005914, -0.005835, -0.005734, -0.00567, -0.005632, 
     1    -0.005607, -0.005597, -0.005604, -0.005644, -0.005696, -0.005744, 
     1    -0.005758, -0.005794, -0.005845, -0.005901, -0.005959, -0.006019, 
     1    -0.00608, -0.006141, -0.006262, -0.006381, -0.006439, -0.006495, 
     1    -0.006604, -0.006655, -0.006704, -0.006795, -0.006882, -0.006923, 
     1    -0.006965, -0.007047, -0.007125, -0.007194, -0.007259, -0.00729, 
     1    -0.00732, -0.007378, -0.007435, -0.007579, -0.00772, -0.007863, 
     1    -0.007911, -0.008001, -0.00812, -0.008223, -0.008313, -0.008381, 
     1    -0.008423, -0.008444, -0.0085, -0.008478, -0.008307, -0.008042, 
     1    -0.007707, -0.007317, -0.006862, -0.006265, -0.005541, -0.004792, 
     1    -0.003555, -0.002764, -0.002497, -0.002292, -0.002007, -0.001828, 
     1    -0.001713, -0.001636, -0.001608, -0.001585, -0.001549, -0.001523,
     1    -0.001501, -0.001483, -0.001467, -0.001453, -0.00144, -0.001416, 
     1    -0.001397, -0.001384, -0.001375, -0.001369, -0.001364, -0.001362, 
     1    -0.00136, -0.00136, -0.001361 /

      data phi4   / 0.102151, 5.4100, 0.102151, 0.10836, 0.110372, 0.11371, 0.1186, 0.119888, 0.122493, 
     1    0.12654, 0.127926, 0.133641, 0.136572, 0.139596, 0.141112, 0.142659, 
     1    0.145774, 0.148927, 0.157001, 0.165249, 0.173635, 0.177001, 0.182082, 
     1    0.190596, 0.199129, 0.207505, 0.215628, 0.223398, 0.230662, 0.243315, 
     1    0.253169, 0.260175, 0.261767, 0.264504, 0.266468, 0.266468, 0.26506, 
     1    0.262501, 0.259163, 0.255253, 0.246252, 0.236525, 0.231541, 0.22657, 
     1    0.216796, 0.211993, 0.207277, 0.198077, 0.189304, 0.185074, 0.18092, 
     1    0.172976, 0.165464, 0.158358, 0.151662, 0.148466, 0.145352, 0.139415, 
     1    0.133828, 0.121226, 0.110339, 0.100842, 0.097891, 0.092504, 0.085153, 
     1    0.078622, 0.072788, 0.067563, 0.06285, 0.058595, 0.051206, 0.045054,
     1    0.039879, 0.035504, 0.031787, 0.028613, 0.02589, 0.023537, 0.021496, 
     1    0.019716, 0.016771, 0.014434, 0.013436, 0.012534, 0.010962, 0.009643, 
     1    0.008521, 0.007561, 0.00713, 0.00673, 0.006008, 0.005379, 0.00483, 
     1    0.004349, 0.003925, 0.003553, 0.003223, 0.002551, 0.002047, 0.001662, 
     1    0.001366, 0.001134, 0.000952, 0.000806, 0.000689, 0.000593, 0.000515 /

      data phi5   / 0.2289, 0.2899, 0.2289, 0.2289, 0.2289, 0.2289, 0.2289, 0.2289, 0.2289, 0.2289, 0.2289, 
     1    0.2289, 0.2289, 0.229, 0.229, 0.229, 0.229, 0.229, 0.229, 0.229, 0.2291, 
     1    0.2291, 0.2291, 0.2292, 0.2293, 0.2294, 0.2295, 0.2296, 0.2297, 0.2302, 
     1    0.2305, 0.2311, 0.2313, 0.2319, 0.2326, 0.2334, 0.2348, 0.2361, 0.2374, 
     1    0.2386, 0.2433, 0.2477, 0.2497, 0.2533, 0.2606, 0.2641, 0.2674, 0.2746, 
     1    0.2847, 0.2895, 0.2942, 0.3032, 0.312, 0.3227, 0.3329, 0.3378, 0.3427, 
     1    0.352, 0.361, 0.381, 0.3993, 0.4142, 0.418, 0.4252, 0.4353, 0.4444, 
     1    0.4494, 0.4542, 0.4587, 0.4629, 0.4668, 0.4703, 0.4729, 0.4743, 0.4756, 
     1    0.4767, 0.4772, 0.4777, 0.4781, 0.4785, 0.4789, 0.4792, 0.4793, 0.4794, 
     1    0.4795, 0.4796, 0.4797, 0.4798, 0.4798, 0.4798, 0.4798, 0.4799, 0.4799, 
     1    0.4799, 0.4799, 0.4799, 0.4799, 0.48, 0.48, 0.48, 0.48, 0.48, 0.48, 
     1    0.48, 0.48, 0.48, 0.48 /

      data phi6   / 0.014996, 0.006718, 0.014996, 0.014996, 0.014996, 0.014996, 0.014996, 0.014996, 0.014996, 
     1    0.014996, 0.014996, 0.014996, 0.014996, 0.014996, 0.014996, 0.014996, 
     1    0.014996, 0.014996, 0.014996, 0.014996, 0.014996, 0.014996, 0.014996, 
     1    0.014996, 0.014996, 0.014996, 0.014996, 0.014996, 0.014996, 0.014994, 
     1    0.014994, 0.014993, 0.014993, 0.014991, 0.014988, 0.014987, 0.014981, 
     1    0.014975, 0.01497, 0.014964, 0.014928, 0.014895, 0.014881, 0.014832, 
     1    0.014731, 0.014684, 0.014639, 0.014513, 0.014239, 0.01411, 0.013985, 
     1    0.013747, 0.013493, 0.012938, 0.012429, 0.01219, 0.011962, 0.011532, 
     1    0.011133, 0.009769, 0.00866, 0.007829, 0.00762, 0.007244, 0.006739, 
     1    0.006325, 0.006163, 0.006014, 0.005876, 0.005749, 0.005678, 0.005613, 
     1    0.005573, 0.005558, 0.005544, 0.005533, 0.005529, 0.005527, 0.005524, 
     1    0.005521, 0.005519, 0.005518, 0.005518, 0.005518, 0.005517, 0.005517, 
     1    0.005517, 0.005517, 0.005517, 0.005517, 0.005517, 0.005517, 0.005517, 
     1    0.005517, 0.005517, 0.005517, 0.005517, 0.005517, 0.005517, 0.005517, 
     1    0.005517, 0.005517, 0.005517, 0.005517, 0.005517, 0.005517, 0.005517 /

      data phi7   / 580.0, 459.0, 580.0, 580.0, 580.0, 580.0, 580.0, 580.0, 580.0, 580.0, 580.0, 
     1    579.9, 579.9, 579.9, 579.9, 579.9, 579.9, 579.9, 579.8, 579.8, 
     1    579.8, 579.7, 579.7, 579.6, 579.6, 579.5, 579.4, 579.3, 579.2, 
     1    578.8, 578.6, 578.2, 578.0, 577.7, 577.2, 576.7, 576.0, 575.2, 
     1    574.6, 573.9, 571.6, 569.5, 568.5, 566.9, 563.6, 562.0, 560.5, 
     1    557.3, 552.6, 550.4, 548.3, 544.1, 540.0, 534.0, 528.4, 525.7, 
     1    523.0, 517.8, 512.9, 497.1, 482.7, 468.7, 463.9, 454.8, 441.9, 
     1    429.9, 419.5, 409.8, 400.5, 391.8, 379.6, 368.5, 359.8, 353.7, 
     1    348.1, 343.1, 340.2, 337.5, 334.9, 332.5, 330.0, 327.8, 326.7, 
     1    326.1, 325.1, 324.1, 323.3, 322.9, 322.7, 322.5, 322.1, 321.7, 
     1    321.6, 321.4, 321.2, 321.1, 320.9, 320.7, 320.6, 320.4, 320.4, 
     1    320.3, 320.2, 320.2, 320.2, 320.1, 320.1 /

      data phi8   / 0.070, 0.1138, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 
     1    0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.0698, 0.0696, 0.0694, 
     1    0.0692, 0.0686, 0.0679, 0.0671, 0.0662, 0.0654, 0.0646, 0.0635, 
     1    0.0625, 0.0602, 0.0592, 0.056, 0.0494, 0.0407, 0.0306, 0.0199, 
     1    0.0089, -0.0019, -0.0223, -0.0401, -0.0479, -0.0548, -0.0665, 
     1    -0.0713, -0.0756, -0.0825, -0.0875, -0.0895, -0.0912, -0.0939, 
     1    -0.096, -0.0975, -0.0987, -0.0991, -0.0994, -0.0998, -0.0998, 
     1    -0.0983, -0.0948, -0.0896, -0.0876, -0.0834, -0.0765, -0.0693, 
     1    -0.062, -0.0549, -0.0479, -0.0412, -0.0285, -0.0167, -0.0057, 
     1    0.0045, 0.014, 0.0229, 0.0313, 0.0393, 0.0469, 0.0544, 0.0687, 
     1    0.0826, 0.0895, 0.0963, 0.1098, 0.1232, 0.1366, 0.1498, 0.1562, 
     1    0.1625, 0.1746, 0.1859, 0.1964, 0.206, 0.2147, 0.2225, 0.2295, 
     1    0.2435, 0.2532, 0.2595, 0.2635, 0.266, 0.2675, 0.2683, 0.2686, 
     1    0.2685, 0.2682 /

      data tau1   / 0.3437, 0.2539, 0.3437, 0.3471, 0.3505, 0.3538, 0.3571, 0.3603, 0.3633, 0.3663, 
     1    0.3691, 0.3718, 0.3744, 0.3768, 0.3791, 0.3811, 0.3831, 0.3848, 
     1    0.3863, 0.3876, 0.3877, 0.3881, 0.3883, 0.3878, 0.3872, 0.3865, 
     1    0.3856, 0.3846, 0.3835, 0.3816, 0.3795, 0.3775, 0.3761, 0.3742, 
     1    0.3719, 0.3696, 0.3672, 0.3649, 0.3626, 0.3601, 0.3572, 0.3543, 
     1    0.3522, 0.35, 0.3474, 0.3455, 0.3438, 0.3417, 0.3398, 0.3386, 
     1    0.3375, 0.3362, 0.3351, 0.3344, 0.3339, 0.334, 0.3344, 0.3346, 
     1    0.3353, 0.3354, 0.336, 0.3369, 0.339, 0.3409, 0.3429, 0.3452, 
     1    0.3478, 0.3508, 0.3541, 0.3577, 0.3608, 0.3644, 0.3682, 0.3725, 
     1    0.3769, 0.3816, 0.3865, 0.3916, 0.3968, 0.4023, 0.4085, 0.4149, 
     1    0.4212, 0.4277, 0.4341, 0.4406, 0.447, 0.4534, 0.4598, 0.4661, 
     1    0.4723, 0.4784, 0.4845, 0.4904, 0.4962, 0.5019, 0.5074, 0.5128, 
     1    0.5181, 0.5232, 0.5281, 0.5328, 0.5374, 0.5419, 0.5461, 0.5502, 0.5542 /

      data tau2   / 0.2637, 0.2381, 0.2637, 0.2671, 0.2705, 0.2738, 0.2771, 0.2803, 0.2833, 0.2863, 
     1    0.2891, 0.2918, 0.2944, 0.2968, 0.2991, 0.3011, 0.3031, 0.3048, 
     1    0.3063, 0.3076, 0.3095, 0.3106, 0.3118, 0.3129, 0.3138, 0.3145, 
     1    0.3149, 0.3151, 0.3152, 0.3154, 0.3153, 0.3151, 0.3143, 0.3135, 
     1    0.3128, 0.312, 0.311, 0.31, 0.3089, 0.3076, 0.3068, 0.306, 0.3047, 
     1    0.3034, 0.3026, 0.3015, 0.3005, 0.2999, 0.2993, 0.2988, 0.2983, 
     1    0.2983, 0.2984, 0.2987, 0.2993, 0.2999, 0.3008, 0.3021, 0.3036, 
     1    0.306, 0.3085, 0.3113, 0.3139, 0.3169, 0.3205, 0.3243, 0.3283, 
     1    0.3326, 0.3371, 0.3419, 0.3472, 0.3527, 0.3584, 0.3643, 0.3703, 
     1    0.3765, 0.3828, 0.3892, 0.3957, 0.4023, 0.4085, 0.4149, 0.4212, 
     1    0.4277, 0.4341, 0.4406, 0.447, 0.4534, 0.4598, 0.4661, 0.4723, 
     1    0.4784, 0.4845, 0.4904, 0.4962, 0.5019, 0.5074, 0.5128, 0.5181,
     1    0.5232, 0.5281, 0.5328, 0.5374, 0.5419, 0.5461, 0.5502, 0.5542 /

      data sigma1  / 0.4458, 0.4496, 0.4458, 0.4458, 0.4476, 0.45, 0.4529, 0.4535, 0.4547, 0.4564, 
     1     0.4569, 0.4589, 0.4598, 0.4607, 0.4611, 0.4615, 0.4623, 0.463, 
     1     0.4647, 0.4663, 0.4677, 0.4682, 0.469, 0.4702, 0.4712, 0.4722, 
     1     0.4731, 0.474, 0.4747, 0.4761, 0.4773, 0.4782, 0.4785, 0.4791, 
     1     0.4798, 0.4803, 0.4808, 0.4811, 0.4814, 0.4816, 0.4817, 0.4816, 
     1     0.4815, 0.4813, 0.4808, 0.4805, 0.4801, 0.4794, 0.4786, 0.4781, 
     1     0.4777, 0.4768, 0.4758, 0.4748, 0.4738, 0.4734, 0.4729, 0.4719, 
     1     0.471, 0.4688, 0.4667, 0.465, 0.4644, 0.4634, 0.4621, 0.461, 
     1     0.46, 0.4592, 0.4586, 0.4581, 0.4555, 0.4535, 0.4518, 0.4505, 
     1     0.4493, 0.4484, 0.4476, 0.4469, 0.4463, 0.4459, 0.4451, 0.4444, 
     1     0.4442, 0.444, 0.4436, 0.4433, 0.443, 0.4428, 0.4427, 0.4426, 
     1     0.4425, 0.4424, 0.4423, 0.4422, 0.4421, 0.442, 0.442, 0.4418, 
     1     0.4417, 0.4417, 0.4416, 0.4416, 0.4415, 0.4415, 0.4415, 0.4415, 
     1     0.4414 /

      data sigma2  / 0.3459, 0.3554, 0.3459, 0.3459, 0.3477, 0.3502, 0.353, 0.3537, 0.3549, 0.3566, 
     1     0.3572, 0.3592, 0.3602, 0.3611, 0.3615, 0.3619, 0.3627, 0.3635, 
     1     0.3654, 0.367, 0.3686, 0.3692, 0.37, 0.3713, 0.3726, 0.3738, 
     1     0.3749, 0.3759, 0.3769, 0.3787, 0.3804, 0.3819, 0.3824, 0.3834, 
     1     0.3847, 0.3859, 0.3871, 0.3882, 0.3893, 0.3902, 0.3921, 0.3938, 
     1     0.3946, 0.3953, 0.3967, 0.3974, 0.3981, 0.3993, 0.4005, 0.401, 
     1     0.4016, 0.4026, 0.4036, 0.4046, 0.4054, 0.4059, 0.4063, 0.4071, 
     1     0.4079, 0.4098, 0.4114, 0.413, 0.4135, 0.4144, 0.4157, 0.417, 
     1     0.4181, 0.4192, 0.4203, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 
     1     0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 
     1     0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 
     1     0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 
     1     0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213 /

      data sigma3  / 0.80, 0.7504, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 
     1     0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 
     1     0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 
     1     0.8, 0.8, 0.7999, 0.7999, 0.7999, 0.7998, 0.7998, 0.7997, 
     1     0.7997, 0.7996, 0.7994, 0.7993, 0.7992, 0.799, 0.7988, 0.7983, 
     1     0.7979, 0.7976, 0.7974, 0.797, 0.7966, 0.794, 0.7917, 0.7884, 
     1     0.7867, 0.7836, 0.7792, 0.7747, 0.7681, 0.7619, 0.756, 0.7504, 
     1     0.74, 0.7304, 0.723, 0.7182, 0.7136, 0.7097, 0.708, 0.7064, 
     1     0.7049, 0.7035, 0.7025, 0.7017, 0.7012, 0.7011, 0.7008, 0.7006, 
     1     0.7004, 0.7003, 0.7003, 0.7002, 0.7002, 0.7001, 0.7001, 0.7001, 
     1     0.7001, 0.7001, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7 /

      data c1_TA    / 0.4550, 0.0, 0.4550, 0.4550, 0.4550, 0.4550, 0.4550, 0.4550, 
     1   0.4550, 0.4550, 0.4550, 0.4550, 0.4550, 0.4550, 0.4550, 
     1   0.4550, 0.4550, 0.4550, 0.4550, 0.4550, 0.4550, 0.4550, 
     1   0.4550, 0.4550, 0.4550, 0.4550, 0.4550, 0.4550, 0.4550, 
     1   0.4550, 0.4550, 0.4550, 0.4550, 0.4550, 0.4550, 0.4550, 
     1   0.4550, 0.4550, 0.4550, 0.4550, 0.4550, 0.4550, 0.4550,  
     1   0.4550, 0.4550, 0.4550, 0.4550, 0.4550, 0.4550, 0.4550, 
     1   0.4550, 0.4550, 0.4550, 0.4550, 0.4550, 0.4550, 0.4550, 
     1   0.4550, 0.4550, 0.4550, 0.4550, 0.4550, 0.4550, 0.4550, 
     1   0.4550, 0.4550, 0.4550, 0.4550, 0.4550, 0.4550, 0.4550, 
     1   0.4550, 0.4550, 0.4550, 0.4550, 0.4550, 0.4550, 0.4550, 
     1   0.4550, 0.4550, 0.4416, 0.4293, 0.4235, 0.4180, 0.4075, 
     1   0.3978, 0.3887, 0.3801, 0.3760, 0.3721, 0.3644, 0.3572, 
     1   0.3503, 0.3438, 0.3375, 0.3315, 0.3257, 0.3123, 0.3000, 
     1   0.2530, 0.2095, 0.1690, 0.1310, 0.0954, 0.0619, 0.0301, 0.0000 /

      data c3_TA   / -0.1600, 0.0, -0.1600, -0.1600, -0.1548, -0.1478, -0.1397, -0.1378, -0.1343, 
     1    -0.1294, -0.1279, -0.1221, -0.1194, -0.1169, -0.1157, -0.1145, 
     1    -0.1121, -0.1099, -0.1047, -0.0999, -0.0956, -0.0939, -0.0915, 
     1    -0.0877, -0.0842, -0.0809, -0.0778, -0.0748, -0.0720, -0.0720, 
     1    -0.0720, -0.0720, -0.0720, -0.0720, -0.0720, -0.0783, -0.0843, 
     1    -0.0899, -0.0952, -0.1002, -0.1095, -0.1181, -0.1221, -0.1259, 
     1    -0.1332, -0.1366, -0.1399, -0.1463, -0.1522, -0.1550, -0.1578, -0.1631, -0.1681, -0.1729,
     1    -0.1775, -0.1797, -0.1818, -0.1860, -0.1900, -0.1900, -0.1900, 
     1    -0.1900, -0.1900, -0.1900, -0.1900, -0.1900, -0.1900, -0.1900, 
     1    -0.1900, -0.1900, -0.1735, -0.1585, -0.1446, -0.1318, -0.1199, 
     1    -0.1087, -0.0982, -0.0883, -0.0790, -0.0701, -0.0536, -0.0386, 
     1    -0.0315, -0.0247, -0.0119, 0.0000, 0.0000, 0.0000, 0.0000, 
     1    0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 
     1    0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000 /

      data c2_TA   / 0.00360, 0.0, 0.00360, 0.00360, 0.00360, 0.00360, 0.00360, 
     1      0.00360, 0.00360, 0.00360, 0.00360, 0.00360, 
     1      0.00360, 0.00360, 0.00360, 0.00360, 0.00360, 
     1      0.00360, 0.00350, 0.00333, 0.00322, 0.00317, 
     1      0.00311, 0.00301, 0.00292, 0.00283, 0.00274, 
     1      0.00267, 0.00259, 0.00245, 0.00232, 0.00221, 
     1      0.00218, 0.00210, 0.00200, 0.00200, 0.00200, 
     1      0.00200, 0.00200, 0.00200, 0.00200, 0.00200, 
     1      0.00200, 0.00200, 0.00200, 0.00200, 0.00200, 
     1      0.00200, 0.00200, 0.00200, 0.00200, 0.00200, 
     1      0.00200, 0.00200, 0.00200, 0.00200, 0.00200, 
     1      0.00200, 0.00200, 0.00200, 0.00200, 0.00200, 
     1      0.00200, 0.00200, 0.00200, 0.00200, 0.00200, 
     1      0.00200, 0.00200, 0.00200, 0.00200, 0.00200, 
     1      0.00200, 0.00200, 0.00200, 0.00189, 0.00179, 
     1      0.00170, 0.00161, 0.00152, 0.00136, 0.00122, 
     1      0.00115, 0.00109, 0.00096, 0.00085, 0.00074, 
     1      0.00064, 0.00059, 0.00055, 0.00046, 0.00037, 
     1      0.00029, 0.00021, 0.00014, 0.00007, 0.00000, 
     1      0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 
     1      0.00000, 0.00000, 0.00000, 0.00000, 0.00000 /

c      Note: Sigma4 only used for Aftershock cases which is not currently coded.
c      data sigma4 /   /
           vHinge=450
C Find the requested spectral period and corresponding coefficients
      nPer = 107
C First check for the PGA case (i.e., specT=0.0) 
      if (specT .eq. 0.0) then
         period1  = period(1)
         c1T      = c1(1)
         c1aT     = c1a(1)
         c1bT     = c1b(1)
         cnT      = cn(1)
         cmT      = cm(1)
         c5T      = c5(1)
         c6T      = c6(1)
         c7T      = c7(1)
         c9T      = c9(1)
         c9aT     = c9a(1)
         c1_TAT     = c1_TA(1)
         gamma1T  = gamma1(1)
         gamma2T  = gamma2(1)
         c2_TAT = c2_TA(1)
         phi1T    = phi1(1)
         phi2T    = phi2(1)
         phi3T    = phi3(1)
         phi4T    = phi4(1)
         phi5T    = phi5(1)
         phi6T    = phi6(1)
         phi7T    = phi7(1)
         phi8T    = phi8(1)
         c3_TAT    = c3_TA(1)
         tau1T    = tau1(1)
         tau2T    = tau2(1)
         sigma1T = sigma1(1)
         sigma2T = sigma2(1)
         sigma3T = sigma3(1)
         goto 1011
      elseif (specT .eq. -1.0) then
         period1  = period(2)
         c1T      = c1(2)
         c1aT     = c1a(2)
         c1bT     = c1b(2)
         cnT      = cn(2)
         cmT      = cm(2)
         c5T      = c5(2)
         c6T      = c6(2)
         c7T      = c7(2)
         c9T      = c9(2)
         c9aT     = c9a(2)
         c1_TAT     = c1_TA(2)
         gamma1T  = gamma1(2)
         gamma2T  = gamma2(2)
         c2_TAT = c2_TA(2)
         phi1T    = phi1(2)
         phi2T    = phi2(2)
         phi3T    = phi3(2)
         phi4T    = phi4(2)
         phi5T    = phi5(2)
         phi6T    = phi6(2)
         phi7T    = phi7(2)
         phi8T    = phi8(2)
         c3_TAT    = c3_TA(2)
         tau1T    = tau1(2)
         tau2T    = tau2(2)
         sigma1T = sigma1(2)
         sigma2T = sigma2(2)
         sigma3T = sigma3(2)
         goto 1011
      elseif (specT .gt. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=3,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020 
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
      write (*,*) 
      write (*,*) 'Chiou and Youngs (NGA-2008-TR) Horizontal'
      write (*,*) 'attenuation model is not defined for a '
      write (*,*) ' spectral period of: ' 
      write (*,'(a10,f10.5)') ' Period = ',specT
      write (*,*) 'This spectral period is outside the defined'
      write (*,*) 'period range in the code or beyond the range'
      write (*,*) 'of spectral periods for interpolation.'
      write (*,*) 'Please check the input file.'
      write (*,*) 
      stop 99

C Interpolate the coefficients for the requested spectral period.
 1020       call interp (period(count1),period(count2),c1(count1),c1(count2),
     +                   specT,c1T,iflag)
            call interp (period(count1),period(count2),c1a(count1),c1a(count2),
     +                   specT,c1aT,iflag)
            call interp (period(count1),period(count2),c1b(count1),c1b(count2),
     +                   specT,c1bT,iflag)
            call interp (period(count1),period(count2),cn(count1),cn(count2),
     +                   specT,cnT,iflag)
            call interp (period(count1),period(count2),cm(count1),cm(count2),
     +                   specT,cmT,iflag)
            call interp (period(count1),period(count2),c5(count1),c5(count2),
     +                   specT,c5T,iflag)
            call interp (period(count1),period(count2),c6(count1),c6(count2),
     +                   specT,c6T,iflag)
            call interp (period(count1),period(count2),c7(count1),c7(count2),
     +                   specT,c7T,iflag)
            call interp (period(count1),period(count2),c9(count1),c9(count2),
     +                   specT,c9T,iflag)
            call interp (period(count1),period(count2),c1_TA(count1),c1_TA(count2),
     +                   specT,c1_TAT,iflag)
            call interp (period(count1),period(count2),c3_TA(count1),c3_TA(count2),
     +                   specT,c3_TAT,iflag)
            call interp (period(count1),period(count2),c2_TA(count1),c2_TA(count2),
     +                   specT,c2_TAT,iflag)          
            call interp (period(count1),period(count2),c9a(count1),c9a(count2),
     +                   specT,c9aT,iflag)
            call interp (period(count1),period(count2),gamma1(count1),gamma1(count2),
     +                   specT,gamma1T,iflag)
            call interp (period(count1),period(count2),gamma2(count1),gamma2(count2),
     +                   specT,gamma2T,iflag)
            call interp (period(count1),period(count2),phi1(count1),phi1(count2),
     +                   specT,phi1T,iflag)
            call interp (period(count1),period(count2),phi2(count1),phi2(count2),
     +                   specT,phi2T,iflag)
            call interp (period(count1),period(count2),phi3(count1),phi3(count2),
     +                   specT,phi3T,iflag)
            call interp (period(count1),period(count2),phi4(count1),phi4(count2),
     +                   specT,phi4T,iflag)
            call interp (period(count1),period(count2),phi5(count1),phi5(count2),
     +                   specT,phi5T,iflag)
            call interp (period(count1),period(count2),phi6(count1),phi6(count2),
     +                   specT,phi6T,iflag)
            call interp (period(count1),period(count2),phi7(count1),phi7(count2),
     +                   specT,phi7T,iflag)
            call interp (period(count1),period(count2),phi8(count1),phi8(count2),
     +                   specT,phi8T,iflag)
            call interp (period(count1),period(count2),tau1(count1),tau1(count2),
     +                   specT,tau1T,iflag)
            call interp (period(count1),period(count2),tau2(count1),tau2(count2),
     +                   specT,tau2T,iflag)
            call interp (period(count1),period(count2),sigma1(count1),sigma1(count2),
     +                   specT,sigma1T,iflag)
            call interp (period(count1),period(count2),sigma2(count1),sigma2(count2),
     +                   specT,sigma2T,iflag)
            call interp (period(count1),period(count2),sigma3(count1),sigma3(count2),
     +                   specT,sigma3T,iflag)

 1011 period1 = specT                                                                                                              

c     Set the fault mechanism term.
C     fType     Mechanism                      Rake
C     ------------------------------------------------------
C      -1       Normal                   -120 < Rake < -60.0
C     1, 0.5    Reverse and Rev/Obl        30 < Rake < 150.0
C     0,-0.5    Strike-Slip and NMl/Obl        Otherwise
         if (ftype .eq. -1) then
            F_RV = 0.0
            F_NM = 1.0
         elseif (ftype .ge. 0.5) then
            F_RV = 1.0
            F_NM = 0.0
         else
            F_RV = 0.0
            F_NM = 0.0
         endif

        c2 = 1.06
        c3 = 3.45
        c4 = -2.1
        c4a = -0.5
        cRB = 50.0
        cHM = 3.0
        gm = 4.0

        pi = atan(1.0)*4.0
        d2r = pi/180.0

        cc = c5T* cosh(c6T * max((M-cHM),0.0))
        gamma = gamma1T + gamma2T/cosh(max((M-gm),0.0))
        cosDELTA = cos(abs(DELTA)*d2r)

c Magnitude scaling
        r1 = c1T + c2 * (M-6.0) +
     1       (c2-c3)/cnT *
     1             alog(1.0 + exp(-cnT*(M-cMT)))
      
C Turkey magnitude scaling adjustment:
      	if (M .le. 6.75) then
      	r1 = r1 + c1_TAT*(M-6.75)
      	endif 

 
c Near-field magnitude and distance scaling
        r2 = c4 * alog(Rrup + cc)

c Distance scaling at large distance
        r3 = (c4a-c4)/2.0 *
     1            alog( Rrup*Rrup+cRB*cRB ) +
     1       Rrup * gamma

C Turkey gamma adjustment:
	
	if (Rrup .gt. 100) then
      	r3 = r3 + c2_TAT*(Rrup-100)
      	endif 

c More source scaling
        r4 = c1aT*F_RV +
     1       c1bT*F_NM +
     1       c7T*(DTor - 4.0)

c HW effect
        if (HWFlag .eq. 0) then
           hw = 0.0
        else
           hw = c9T * tanh(Rx*cosDelta**2.0/c9aT) * 
     1          (1.0 - sqrt(Rbjf**2.0+DTor**2.0)/(Rrup + 0.001)) 
        endif
c Predicted median Sa on reference condition (Vs=1130 m/sec)
        psa_ref = r1+r2+r3+r4+hw

c Linear soil amplification
        a = phi1T * min(alog(Vs/1130.0), 0.0)

c Nonlinear soil amplification
        b = phi2T *
     1      (exp(phi3T*(min(Vs,1130.0)-360.0)) - exp(phi3T*(1130.0-360.0)))
        c = phi4T

c  Turkey site amplification      
     	  d = (c3_TAT) * alog(Vs/vHinge)

      
C Deviation from ln(Vs30) scaling: bedrock depth (Z1) effect
C NOTE: max(0,z1-15) is capped at 300 to avoid overflow of function cosh
        rkdepth = phi5T*
     1            (1.0-1.0/cosh(phi6T*max(0.0,depthvs10*1000.0-phi7T))) +
     1            phi8T/cosh(0.15*min(max(0.0,depthvs10*1000.0-15.0),300.0))

c Sa on soil condition
        psa = psa_ref + (a + b * alog((exp(psa_ref)+c)/c)) + rkdepth + d

C Compute the sigma term
        NL = b*exp(psa_ref)/(exp(psa_ref)+c)
        sigma_M = sigma1T + (sigma2T-sigma1T)/2.0*(min(max(M,5.0),7.0)-5.0)
        if (vs30_class .eq. 0) then
           sigma = sigma_M*sqrt(sigma3T+(1.0+NL)**2.0)
        else
           sigma = sigma_M*sqrt(0.7+(1.0+NL)**2.0)
        endif
C Compute the tau term
        tau = tau1T + (tau2T-tau1T)/2.0*(min(max(M,5.0),7.0)-5.0)
        tau = tau*(1.0+NL)

        sigma = sqrt(tau*tau + sigma*sigma)

C     Convert ground motion to units of gals.
      lnY = psa + 6.89
      period2 = period1

      return
      end 
      

c ---------------------------------------------------------------------            
C ** Idriss (NGA-2008) Horizontal, Vs=540-900 m/sec **
c ---------------------------------------------------------------------            
      Subroutine I_NGA_2008TR ( m, Rrup, ftype, specT,
     1                     period2, lnY, sigma, iflag )

      implicit none

      integer MAXPER, i, nPer
      parameter (MAXPER=32)
      REAL Period(MAXPER), a1mlt675(MAXPER), a2mlt675(MAXPER), b1mlt675(MAXPER), b2mlt675(MAXPER) 
      REAL a1(MAXPER), a2(MAXPER), b1(MAXPER), b2(MAXPER) 
      real gam(MAXPER), phi(MAXPER), c1_TA(MAXPER), sigma

      REAL M, RRUP
      REAL SOF, period2, lnY, PhiT, gamT, ftype

      real a1T, a2T, b1T, b2T, c1_TAT, period1, a1mlt675T, a2mlt675T
      real b1mlt675T, b2mlt675T, specT
      integer iflag, count1, count2

      Data period / 0.00, 0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.08,  
     1              0.10, 0.15, 0.20, 0.25, 0.30, 0.35, 0.40, 0.45,  
     2              0.50, 0.60, 0.70, 0.80, 0.90, 1.00, 1.50, 2.00,
     3		    3.00, 4.00, 5.00, 6.00, 7.00, 8.00, 9.00, 10.00 /
      data a1 / 5.6315, 5.6315, 5.6315, 5.6815, 5.7315, 5.8447, 6.0362,  
     1          6.4307, 6.3053, 5.0845, 5.0842, 4.5453, 4.2719, 4.0174,  
     2          3.7792, 3.5519, 3.3235, 2.9047, 2.5222, 2.1972, 1.8971,  
     3          1.5822, 0.2888, -0.7737, -2.3037, -3.4564, -4.3563,
     4         -5.1145, -5.7538, -6.2921, -6.7588, -7.1679 /
      data a2 / -0.4104, -0.4104, -0.4104, -0.4104, -0.4104, -0.4329,  
     1          -0.4551, -0.4831, -0.4359, -0.2566, -0.2393, -0.1850,  
     2          -0.1614, -0.1399, -0.1202, -0.1020, -0.0849, -0.0538,  
     3          -0.0258, -0.0003, 0.0232, 0.0450, 0.1354, 0.2054,0.3099,
     4	         0.3855, 0.4427, 0.4868, 0.5209, 0.5471, 0.5669, 0.5814 /
      data c1_TA / 0.4750, 0.4750, 0.4750, 0.4750, 0.4750, 0.4750,  
     1         0.4750, 0.4187, 0.3750, 0.3750, 0.3750, 0.3750,  
     2          0.4070, 0.4341, 0.4576, 0.4782, 0.4968, 0.5288,  
     3          0.5559, 0.5793, 0.600, 0.6000, 0.6000, 0.5166, 0.3990,
     4	        0.3156, 0.2510, 0.1981, 0.1534, 0.1147, 0.0805, 0.0500 /            
      data b1 / 2.9832, 2.9832, 2.9832, 2.9832, 2.9832, 2.9487, 2.9494,  
     1          2.9788, 2.9153, 2.4829, 2.5066, 2.3687, 2.3475, 2.3284,  
     2          2.3105, 2.2937, 2.2793, 2.2507, 2.2250, 2.2014, 2.1786,  
     3          2.1588, 2.0720, 2.0027, 1.8938, 1.8091, 1.7401, 1.6825, 
     4          1.6327, 1.5900, 1.5532, 1.5201 /
      data b2 / -0.2339, -0.2339, -0.2339, -0.2339, -0.2339, -0.2346,  
     1          -0.2356, -0.2386, -0.2265, -0.1707, -0.1738, -0.1623,  
     2          -0.1612, -0.1602, -0.1593, -0.1584, -0.1577, -0.1562,  
     3          -0.1549, -0.1537, -0.1525, -0.1515, -0.1471, -0.1436,
     4          -0.1382, -0.1341, -0.1308, -0.1281, -0.1258, -0.1239,
     5          -0.1223, -0.1209 /
      data a1mlt675 / 3.7066, 3.7066, 3.7066, 3.7566, 3.8066, 4.1248,  
     1                4.4681, 4.4853, 4.4592, 3.4793, 3.2354, 2.7628,  
     2                2.3813, 2.0302, 1.7037, 1.3940, 1.0893, 0.5308,  
     3                0.0240, -0.4141, -0.8184, -1.2290, -2.9168,
     4               -4.2783, -6.2431, -7.6967, -8.8110, -9.7232, 
     5               -10.4706, -11.0814, -11.5896, -12.0149 /
      data a2mlt675 / -0.1252, -0.1252, -0.1252, -0.1252, -0.1252, -0.1781, 
     1                -0.2228, -0.1949, -0.1624, -0.0188, 0.0346, 0.0791,   
     2                 0.1187, 0.1545, 0.1873, 0.2177, 0.2461, 0.2979, 0.3443,  
     3                 0.3866, 0.4255, 0.4615, 0.6103, 0.7246, 0.8935, 1.0137,
     4                 1.1027, 1.1696, 1.2197, 1.2566, 1.2826, 1.2995 /
      data b1mlt675 / 2.9832, 2.9832, 2.9832, 2.9832, 2.9832, 3.0156, 3.0708,  
     1                3.1071, 3.1212, 2.8609, 2.8739, 2.8203, 2.8126, 2.8056,  
     2                2.7992, 2.7932, 2.7876, 2.7772, 2.7677, 2.7590, 2.7510,  
     3                2.7434, 2.7112, 2.6851, 2.6437, 2.6110, 2.5839, 2.5607,
     4                2.5406, 2.5228, 2.5070, 2.4928 /
      data b2mlt675 / -0.2339, -0.2339, -0.2339, -0.2339, -0.2339, -0.2445,
     1                -0.2536, -0.2576, -0.2570, -0.2267, -0.2282, -0.2292,  
     2                -0.2301, -0.2309, -0.2317, -0.2324, -0.2330, -0.2342,  
     3                -0.2353, -0.2363, -0.2373, -0.2381, -0.2418, -0.2447,
     4                -0.2493, -0.2529, -0.2558, -0.2582, -0.2603, -0.2621,
     5                -0.2636, -0.2650 /
      data gam / 0.00047, 0.00047, 0.00047, 0.00047, 0.00047, 0.00000,  
     1           0.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00049,  
     2           0.00052, 0.00099, 0.00112, 0.00114, 0.00132, 0.00154,  
     3           0.00170, 0.00152, 0.00157, 0.00188, 0.00250, 0.00268,
     4           0.00050, -0.00248, -0.00453, -0.00566, -0.00633,
     5          -0.00671, -0.00689, -0.00709 /
      data phi / 0.12, 0.12, 0.12, 0.12, 0.12, 0.12, 0.12, 0.12, 0.12, 0.12,  
     1           0.12, 0.12, 0.12, 0.12, 0.12, 0.12, 0.12, 0.12, 0.12,  
     2           0.12, 0.11, 0.10, 0.06, 0.04, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,
     3           0.00, 0.00 /


C Find the requested spectral period and corresponding coefficients
      nPer = 32
C First check for the PGA case (i.e., specT=0.0) 
      if (specT .eq. 0.0) then
         period1 = period(1)
         a1T     = a1(1)
         a2T     = a2(1)
         c1_TAT     = c1_TA(1)
         b1T     = b1(1)
         b2T     = b2(1)
         a1mlt675T = a1mlt675(1)
         a2mlt675T = a2mlt675(1)
         b1mlt675T = b1mlt675(1)
         b2mlt675T = b2mlt675(1)
         gamT   = gam(1)
         phiT   = phi(1)
         goto 1011
      elseif (specT .gt. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020 
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
      write (*,*) 
      write (*,*) 'Idriss (NGA-2008-TR) Horizontal Vs=450-900m/s'
      write (*,*) 'attenuation model is not defined for a '
      write (*,*) ' spectral period of: ' 
      write (*,'(a10,f10.5)') ' Period = ',specT
      write (*,*) 'This spectral period is outside the defined'
      write (*,*) 'period range in the code or beyond the range'
      write (*,*) 'of spectral periods for interpolation.'
      write (*,*) 'Please check the input file.'
      write (*,*) 
      stop 99

C Interpolate the coefficients for the requested spectral period.
 1020       call interp (period(count1),period(count2),a1(count1),a1(count2),
     +                   specT,a1T,iflag)
            call interp (period(count1),period(count2),a2(count1),a2(count2),
     +                   specT,a2T,iflag)
            call interp (period(count1),period(count2),c1_TA(count1),c1_TA(count2),
     +                   specT,c1_TAT,iflag)
            call interp (period(count1),period(count2),b1(count1),b1(count2),
     +                   specT,b1T,iflag)
            call interp (period(count1),period(count2),b2(count1),b2(count2),
     +                   specT,b2T,iflag)
            call interp (period(count1),period(count2),a1mlt675(count1),a1mlt675(count2),
     +                   specT,a1mlt675T,iflag)
            call interp (period(count1),period(count2),a2mlt675(count1),a2mlt675(count2),
     +                   specT,a2mlt675T,iflag)
            call interp (period(count1),period(count2),b1mlt675(count1),b1mlt675(count2),
     +                   specT,b1mlt675T,iflag)
            call interp (period(count1),period(count2),b2mlt675(count1),b2mlt675(count2),
     +                   specT,b2mlt675T,iflag)
            call interp (period(count1),period(count2),phi(count1),phi(count2),
     +                   specT,phiT,iflag)
            call interp (period(count1),period(count2),gam(count1),gam(count2),
     +                   specT,gamT,iflag)

 1011 period1 = specT                                                                                                              

C.....Compute the Ground motion.......

C.....Set the mechanism term.....................
C     Strike-slip events --> SOF = 0
C     Reverse events     --> SOF = 1
C     Otherwise assume SOF = 0
      if (ftype .eq. 1.0) then
         SOF = 1.0
      else
         SOF = 0.0
      endif

      if (m .lt. 6.75) then
         lnY = a1mlt675T + a2mlt675T*m - (b1mlt675T+b2mlt675T*m) * alog(rrup+10.0) +
     1         gamT*rRup + SOF*phiT + c1_TAT*(m-6.75)
      else
         lnY = a1T + a2T*m - (b1T+b2T*m) * alog(rrup+10.0) +
     1         gamT*rRup + SOF*phiT
      endif

C     Convert ground motion to units of gals.
      lnY = lnY + 6.89

C     Compute Sigma which is Period and magnitude dependent.
      if (specT .le. 0.05) then
         if (m .le. 5.0) then
            sigma = 1.28 +0.05*alog(0.05) - 0.08*5.0
         elseif (m .ge. 7.5) then
            sigma = 1.28 +0.05*alog(0.05) - 0.08*7.5
         else
            sigma = 1.28 +0.05*alog(0.05) - 0.08*m
         endif
      elseif (specT .ge. 3.0) then
         if (m .le. 5.0) then
            sigma = 1.28 +0.05*alog(3.00) - 0.08*5.0
         elseif (m .ge. 7.5) then
            sigma = 1.28 +0.05*alog(3.00) - 0.08*7.5
         else
            sigma = 1.28 +0.05*alog(3.00) - 0.08*m
         endif
      else
         if (m .le. 5.0) then
            sigma = 1.28 +0.05*alog(specT) - 0.08*5.0
         elseif (m .ge. 7.5) then
            sigma = 1.28 +0.05*alog(specT) - 0.08*7.5
         else
            sigma = 1.28 +0.05*alog(specT) - 0.08*m
         endif
      endif

      period2 = period1

      return
      end 


c ---------------------------------------------------------------------            
C     *** Campbell and Bozorgnia NGA (NGA-2008) ***
c ---------------------------------------------------------------------            

      subroutine CB_NGA_2008TR ( mag, Rrup, Rbjf, Ftype, specT, 
     1                     period2, lnY, sigma, iflag, vs,
     2                     depthtop, D25, Dip ) 

      implicit none

      integer MAXPER, i, nPer, iflag
      parameter (MAXPER=24)
      REAL Period(MAXPER), C0(MAXPER), C1(MAXPER), C2(MAXPER), C3(MAXPER), C4(MAXPER), C5(MAXPER)
      REAL C6(MAXPER), C7(MAXPER), C8(MAXPER), C9(MAXPER), C10(MAXPER), C11(MAXPER), C12(MAXPER)
      REAL K1(MAXPER), K2(MAXPER), K3(MAXPER), c1_TA(MAXPER) 
      REAL SIG(MAXPER), tlny(MAXPER), slny(MAXPER)
      REAL cort(MAXPER), cors(MAXPER)

      REAL MAG, RRUP, RBJF, VS, D25, FHWR, FHWM, FHWZ, FHWD, PGAROCK, C, N
      real sigmaT, lnY, ftype, ztor, Dip, Dmax, pgasoil, specT
      INTEGER count1, count2

      real c0T, c1T, c2T, c3T, c4T, c5T, c6T, c7T, c8T, c9T, c10T, c11T, c12T
      real k1T, k2T, k3T, sigT, c1_TAT
      real tlnyT, slnyT, cortT, corsT
      real tau, TERM1, TERM2, TERM3, TERM4, term5, TERM5_RK, TERM6, R
      real period1, depthtop, period2, sigma, dAmp_dPGA

C.....MODEL COEFFICIENTS.....................
      data Period /  0.00, -1.0, -2.0, 0.01, 0.02, 0.03, 0.05, 0.075, 0.1, 0.15, 0.2, 0.25, 
     &               0.3, 0.4, 0.5, 0.75, 1, 1.5, 2, 3, 4, 5, 7.5, 10. /
      data C0     / -1.715, 0.954, -5.270, -1.715, -1.68, -1.552, -1.209, -0.657, -0.314, -0.133,
     &              -0.486, -0.89, -1.171, -1.466, -2.569, -4.844, -6.406,
     &              -8.692, -9.701, -10.556, -11.212, -11.684, -12.505, -13.087 /
      data C1     /  0.5,0.696, 1.60, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5,
     &               0.656, 0.972, 1.196, 1.513, 1.6, 1.6, 1.6, 1.6, 1.6, 1.6 /
      data c2     / -0.53,-0.309, -0.070, -0.53, -0.53, -0.53, -0.53, -0.53, -0.53, -0.53, -0.446,
     &              -0.362, -0.294, -0.186, -0.304, -0.578, -0.772, -1.046,
     &              -0.978, -0.638, -0.316, -0.07, -0.07, -0.07 /
      data c3     / -0.262, -0.019,  0.000, -0.262, -0.262, -0.262, -0.267, -0.302, -0.324, -0.339,
     &              -0.398, -0.458, -0.511, -0.592, -0.536, -0.406, -0.314,
     &              -0.185, -0.236, -0.491, -0.77, -0.986, -0.656, -0.422 /
      data c4     / -2.118, -2.016, -2.000, -2.118, -2.123, -2.145, -2.199, -2.277, -2.318, -2.309,
     &              -2.22, -2.146, -2.095, -2.066, -2.041, -2.0, -2.0, -2.0,
     &              -2.0, -2.0, -2.0, -2.0, -2.0, -2.0 /
      data c5     /  0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17,
     &               0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17,
     &               0.17, 0.17, 0.17 /
      data c6     /  5.6, 4.00, 4.00, 5.6, 5.6, 5.6, 5.74, 7.09, 8.05, 8.79, 7.6, 6.58,
     &               6.04, 5.3, 4.73, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0,
     &               4.0, 4.0 /
      data c7     /  0.28, 0.245, 0.000, 0.28, 0.28, 0.28, 0.28, 0.28, 0.28, 0.28, 0.28, 0.28,
     &               0.28, 0.28, 0.28, 0.28, 0.255, 0.161, 0.094, 0.0, 0.0,
     &               0.0, 0.0, 0.0 /
      data c8     / -0.12, 0.00, 0.00, -0.12, -0.12, -0.12, -0.12, -0.12, -0.099, -0.048, -0.012,
     &               0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     &               0.0, 0.0 /
      data c9     /  0.49, 0.358, 0.000, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 
     &               0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.371, 0.154, 0.0,
     &               0.0, 0.0, 0.0 /
      data c10    /  1.058, 1.694, -0.820, 1.058, 1.102, 1.174, 1.272, 1.438, 1.604, 1.928, 2.194,
     &               2.351, 2.46, 2.587, 2.544, 2.133, 1.571, 0.406, -0.456, 
     &              -0.82, -0.82, -0.82, -0.82, -0.82 /
      data c11    /  0.04, 0.092, 0.300, 0.04, 0.04, 0.04, 0.04, 0.04, 0.04, 0.04, 0.04, 0.04,
     &               0.04, 0.04, 0.04, 0.077, 0.15, 0.253, 0.3, 0.3, 0.3, 
     &               0.3, 0.3, 0.3 /
      data c12    /  0.61, 1.000, 1.000, 0.61, 0.61, 0.61, 0.61, 0.61, 0.61, 0.61, 0.61, 0.61,
     &               0.61, 0.61, 0.883, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
     &               1.0, 1.0 /
      data k1     /  865., 400.0, 400.0, 865., 865., 908., 1054., 1086., 1032., 878., 748., 654.,
     &               587., 503., 457., 410., 400., 400., 400., 400., 400., 
     &               400., 400., 400. /
      data k2     / -1.186, -1.955, 0.000, -1.186, -1.219, -1.273, -1.346, -1.471, -1.624, -1.931,
     &              -2.188, -2.381, -2.518, -2.657, -2.669, -2.401, -1.955,
     &              -1.025, -0.299, 0.000, 0.000, 0.000, 0.000, 0.000 /
      data k3     /  1.839, 1.929, 2.744, 1.839, 1.84, 1.841, 1.843, 1.845, 1.847, 1.852, 1.856,
     &               1.861, 1.865, 1.874, 1.883, 1.906, 1.929, 1.974, 2.019,
     &               2.11, 2.2, 2.291, 2.517, 2.744 /
      data sig    /  0.526, 0.525, 0.825, 0.526, 0.528, 0.543, 0.572, 0.596, 0.603, 0.601, 0.589,
     &               0.585, 0.585, 0.583, 0.59, 0.612, 0.623, 0.637, 0.643,
     &               0.646, 0.648, 0.7, 0.76, 0.825 /
      data tlny   /  0.219, 0.203, 0.485, 0.219, 0.219, 0.235, 0.258, 0.292, 0.286, 0.280, 0.249,
     &               0.240, 0.215, 0.217, 0.214, 0.227, 0.255, 0.296, 0.296, 
     &               0.326, 0.297, 0.359, 0.428, 0.485 /
      data slny   /  0.478, 0.484, 0.667, 0.478, 0.480, 0.489, 0.510, 0.520, 0.531, 0.532, 0.534, 
     &               0.534, 0.544, 0.541, 0.550, 0.568, 0.568, 0.564, 0.571, 
     &               0.558, 0.576, 0.601, 0.628, 0.667 /
      data cort   /  1.000, 0.538, 0.290, 1.000, 0.994, 0.979, 0.927, 0.880, 0.871, 0.885, 0.913, 
     &               0.873, 0.848, 0.756, 0.631, 0.442, 0.290, 0.290, 0.290, 
     &               0.290, 0.290, 0.290, 0.290, 0.290 /
      data cors   /  1.000, 0.691, 0.174, 1.000, 0.999, 0.989, 0.963, 0.922, 0.898, 0.890, 0.871, 
     &               0.852, 0.831, 0.785, 0.735, 0.628, 0.534, 0.411, 0.331, 
     &               0.289, 0.261, 0.200, 0.174, 0.174 /
      data c1_TA    /  0.690, 0.000, 0.000, 0.690, 0.690, 0.690, 0.690, 0.690, 0.690, 0.690,
     &               0.690, 0.690, 0.6806, 0.6658, 0.6543, 0.6334, 0.6186,
     &               0.5977, 0.5829, 0.5620, 0.5472, 0.5357, 0.5148, 0.5000 /

      nPer = 21
      c = 1.88
      n = 1.18

C First check for the PGA case (i.e., specT=0.0) 
      if (specT .eq. 0.0) then
         period1 = period(1)
         c0T = c0(1)
         c1T = c1(1)
         c2T = c2(1)
         c3T = c3(1)
         c4T = c4(1)
         c5T = c5(1)
         c6T = c6(1)
         c7T = c7(1)
         c8T = c8(1)
         c9T = c9(1)
         c10T = c10(1)
         c11T = c11(1)
         c12T = c12(1)
         c1_TAT = c1_TA(1)
         k1T = k1(1)
         k2T = k2(1)
         k3T = k3(1)
         sigT = sig(1)
         tlnyT = tlny(1)
         slnyT = slny(1)
         cortT = cort(1)
         corsT = cors(1)
         goto 1011
C First check for the PGV case (i.e., specT=-1.0) 
      elseif (specT .eq. -1.0) then
         period1 = period(2)
         c0T = c0(2)
         c1T = c1(2)
         c2T = c2(2)
         c3T = c3(2)
         c4T = c4(2)
         c5T = c5(2)
         c6T = c6(2)
         c7T = c7(2)
         c8T = c8(2)
         c9T = c9(2)
         c10T = c10(2)
         c11T = c11(2)
         c12T = c12(2)
         c1_TAT = c1_TA(2)
         k1T = k1(2)
         k2T = k2(2)
         k3T = k3(2)
         sigT = sig(2)
         tlnyT = tlny(2)
         slnyT = slny(2)
         cortT = cort(2)
         corsT = cors(2)
         goto 1011
C First check for the PGD case (i.e., specT=-2.0) 
      elseif (specT .eq. -2.0) then
         period1 = period(3)
         c0T = c0(3)
         c1T = c1(3)
         c2T = c2(3)
         c3T = c3(3)
         c4T = c4(3)
         c5T = c5(3)
         c6T = c6(3)
         c7T = c7(3)
         c8T = c8(3)
         c9T = c9(3)
         c10T = c10(3)
         c11T = c11(3)
         c12T = c12(3)
         c1_TAT = c1_TA(3)
         k1T = k1(3)
         k2T = k2(3)
         k3T = k3(3)
         sigT = sig(3)
         tlnyT = tlny(3)
         slnyT = slny(3)
         cortT = cort(3)
         corsT = cors(3)
         goto 1011
      elseif (specT .gt. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=4,nper-1+3
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020 
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
      write (*,*) 
      write (*,*) 'Campbell&Bozorgnia (NGA-2008-TR) Horizontal'
      write (*,*) 'attenuation model is not defined for a '
      write (*,*) ' spectral period of: ' 
      write (*,'(a10,f10.5)') ' Period = ',specT
      write (*,*) 'This spectral period is outside the defined'
      write (*,*) 'period range in the code or beyond the range'
      write (*,*) 'of spectral periods for interpolation.'
      write (*,*) 'Please check the input file.'
      write (*,*) 
      stop 99

C Interpolate the coefficients for the requested spectral period.
 1020       call interp (period(count1),period(count2),c0(count1),c0(count2),
     +                   specT,c0T,iflag)
            call interp (period(count1),period(count2),c1(count1),c1(count2),
     +                   specT,c1T,iflag)
            call interp (period(count1),period(count2),c2(count1),c2(count2),
     +                   specT,c2T,iflag)
            call interp (period(count1),period(count2),c3(count1),c3(count2),
     +                   specT,c3T,iflag)
            call interp (period(count1),period(count2),c4(count1),c4(count2),
     +                   specT,c4T,iflag)
            call interp (period(count1),period(count2),c5(count1),c5(count2),
     +                   specT,c5T,iflag)
            call interp (period(count1),period(count2),c6(count1),c6(count2),
     +                   specT,c6T,iflag)
            call interp (period(count1),period(count2),c7(count1),c7(count2),
     +                   specT,c7T,iflag)
            call interp (period(count1),period(count2),c8(count1),c8(count2),
     +                   specT,c8T,iflag)
            call interp (period(count1),period(count2),c9(count1),c9(count2),
     +                   specT,c9T,iflag)
            call interp (period(count1),period(count2),c10(count1),c10(count2),
     +                   specT,c10T,iflag)
            call interp (period(count1),period(count2),c11(count1),c11(count2),
     +                   specT,c11T,iflag)
            call interp (period(count1),period(count2),c12(count1),c12(count2),
     +                   specT,c12T,iflag)
            call interp (period(count1),period(count2),c1_TA(count1),c1_TA(count2),
     +                   specT,c1_TAT,iflag)
            call interp (period(count1),period(count2),k1(count1),k1(count2),
     +                   specT,k1T,iflag)
            call interp (period(count1),period(count2),k2(count1),k2(count2),
     +                   specT,k2T,iflag)
            call interp (period(count1),period(count2),k3(count1),k3(count2),
     +                   specT,k3T,iflag)
            call interp (period(count1),period(count2),sig(count1),sig(count2),
     +                   specT,sigT,iflag)
            call interp (period(count1),period(count2),tlny(count1),tlny(count2),
     +                   specT,tlnyT,iflag)
            call interp (period(count1),period(count2),slny(count1),slny(count2),
     +                   specT,slnyT,iflag)
            call interp (period(count1),period(count2),cort(count1),cort(count2),
     +                   specT,cortT,iflag)
            call interp (period(count1),period(count2),cors(count1),cors(count2),
     +                   specT,corsT,iflag)
 1011 period1 = specT                                                                                                              

C.....COMPUTE ROCK PGA VALUE FIRST.........................
C.....MAGNITUDE DEPENDENCE.................................
      IF (MAG .LE. 5.5) THEN
         TERM1 = C0(1) + C1(1)*MAG + c1_TA(1)*(mag-6.5)
      elseif (mag .le. 6.5) then
         TERM1 = C0(1) + C1(1)*MAG + c2(1)*(mag-5.5) + c1_TA(1)*(mag-6.5)
      ELSE
         TERM1 = C0(1) + C1(1)*MAG + C2(1)*(MAG-5.5)+c3(1)*(mag-6.5)
      ENDIF
      
C.....Distance dependence......
      R = SQRT( RRUP*RRUP+C6(1)*C6(1) )
      TERM2 = (C4(1) + C5(1)*MAG)*ALOG(R)

C.....SET UP STYLE OF FAULTING TERMS...........
      IF (depthtop .ge. 1.0) THEN
         Ztor = 1.0
      ELSE
         Ztor = depthtop
      ENDIF

C     Set mechanism term and corresponding Frv and Fnm values.
C     fType     Mechanism                      Rake
C     ------------------------------------------------------
C    -1,-0.5    Normal and NMl/Obl       -150 < Rake < -30.0
C     1, 0.5    Reverse and Rev/Obl        30 < Rake < 150.0
C       0       Strike-Slip                    Otherwise
      IF (Ftype .EQ. 0.0) THEN
         TERM3 = 0.0
      ELSEIF (Ftype .ge. 0.5) THEN
         TERM3 = C7(1)*Ztor
      ELSEIF (Ftype .le. -0.5) THEN
         TERM3 = C8(1)
      ENDIF

C.....SET UP HANGING WALL TERMS................
      IF (RBJF .EQ. 0.0) THEN
         FHWR = 1.0
      ELSEIF (rbjf .gt. 0.0 .and. depthtop .lt. 1.0) then
         dmax = max(Rrup,sqrt(Rbjf*Rbjf+1))
         FHWR = (dmax - RBJF)/dmax
      ELSEIF (rbjf .gt. 0.0 .and. depthtop .ge. 1.0) then
         FHWR = (Rrup - Rbjf)/Rrup
      ENDIF

      IF (MAG .LE. 6.0) THEN
         FHWM = 0.0
      ELSEIF (MAG .GT. 6.0 .AND. MAG .LT. 6.5) THEN
         FHWM = (MAG-6.0)*2.0
      ELSE
         FHWM = 1.0
      ENDIF

      IF (depthtop .GE. 20.0) THEN
         FHWZ = 0.0
      ELSE
         FHWZ = (20.0-depthtop)/20.0
      ENDIF

      IF (abs(dip) .le. 70.0) THEN
          FHWD = 1.0
      ELSE
         FHWD = (90.0 - abs(Dip))/20.0
      ENDIF

      TERM4 = C9(1)*FHWR*FHWM*FHWZ*FHWD

C.....NOW COMPUTE THE SITE CONDITION FACTORS...............
C.....(FOR PGA ROCK, VS=1100, i.e., Vs>k1)
      TERM5_RK = (C10(1) + K2(1)*n)*ALOG( 1100.0/K1(1) )

C.....NOW COMPUTE THE SEDIMENT DEPTH DEPENDENCE.............
      if (D25 .lt. 1.0) then
         TERM6 = C11(1)*(D25-1.0)
      elseif (D25 .GE. 1.0 .AND. D25 .LE. 3.0) then
         TERM6 = 0.0
      elseif (D25 .GT. 3.0) then
         TERM6 = c12(1)*k3(1)*exp(-0.75)*(1.0-exp(-0.25*(D25-3.0)))
      endif

      PGAROCK = EXP(TERM1+TERM2+TERM3+TERM4+TERM5_RK+TERM6)

C.....(For PGA Soil)
      if (vs .lt. k1(1) ) then
         term5 = c10(1)*alog(vs/k1(1)) + 
     1           k2(1)*(alog(pgarock+c*((vs/k1(1))**n)) - 
     2           alog(pgarock+c))
      elseif (vs .lt. 1100.0) then
         term5 = (c10(1) + k2(1)*n)*alog(vs/k1(1))
      elseif (vs .ge. 1100.0) then
         term5 = (c10(1) + k2(1)*n)*alog(1100.0/k1(1))
      endif

      pgasoil = alog(pgarock) - term5_rk + term5

C.....NOW COMPUTE THE GROUND MOTION VALUES.................
C.....MAGNITUDE DEPENDENCE.................................
      IF (MAG .LE. 5.5) THEN
         TERM1 = C0T + C1T*MAG + c1_TAT*(mag-6.5)
      elseif (mag .le. 6.5) then
         TERM1 = C0T + C1T*MAG + c2T*(mag-5.5)+ c1_TAT*(mag-6.5)
      ELSE
         TERM1 = C0T + C1T*MAG + C2T*(MAG-5.5)+c3T*(mag-6.5)
      ENDIF

C.....Distance dependence......
      R = SQRT( RRUP*RRUP+C6T*C6T )
      TERM2 = (C4T + C5T*MAG)*ALOG(R)

C.....SET UP STYLE OF FAULTING TERMS...........
      IF (depthtop .GE. 1.0) THEN
         Ztor = 1.0
      ELSE
         Ztor = depthtop
      ENDIF

C     Set mechanism term and corresponding Frv and Fnm values.
C     fType     Mechanism                      Rake
C     ------------------------------------------------------
C    -1,-0.5    Normal and NMl/Obl       -150 < Rake < -30.0
C     1, 0.5    Reverse and Rev/Obl        30 < Rake < 150.0
C       0       Strike-Slip                    Otherwise
      IF (Ftype .EQ. 0.0) THEN
         TERM3 = 0.0
      ELSEIF (Ftype .ge. 0.5) THEN
         TERM3 = C7T*Ztor
      ELSEIF (Ftype .le. -0.5) THEN
         TERM3 = C8T
      ENDIF

C.....SET UP HANGING WALL TERMS................
      IF (RBJF .EQ. 0.0) THEN
         FHWR = 1.0
      ELSEIF (rbjf .gt. 0.0 .and. depthtop .lt. 1.0) then
         dmax = max(Rrup,sqrt(Rbjf*Rbjf+1))
         FHWR = (dmax - RBJF)/dmax
      ELSEIF (rbjf .gt. 0.0 .and. depthtop .ge. 1.0) then
         FHWR = (Rrup - Rbjf)/Rrup
      ENDIF

      IF (MAG .LE. 6.0) THEN
         FHWM = 0.0
      ELSEIF (MAG .GT. 6.0 .AND. MAG .LT. 6.5) THEN
         FHWM = (MAG-6.0)*2.0
      ELSE
         FHWM = 1.0
      ENDIF

      IF (depthtop .GE. 20.0) THEN
         FHWZ = 0.0
      ELSE
         FHWZ = (20.0-depthtop)/20.0
      ENDIF

      IF (abs(dip) .le. 70.0) THEN
          FHWD = 1.0
      ELSE
         FHWD = (90.0 - abs(Dip))/20.0
      ENDIF

      TERM4 = C9T*FHWR*FHWM*FHWZ*FHWD

C.....NOW COMPUTE THE SITE CONDITION FACTORS...............
      IF (VS .LT. K1T ) THEN
         TERM5 = C10T*ALOG( VS/K1T ) +
     1           K2T*( ALOG( PGAROCK+c*( (VS/K1T)**N) ) -
     2           ALOG( PGAROCK+c ) )
      ELSEIF (vs .lt. 1100.0) then
         TERM5 = ( C10T+K2T*n )*ALOG( VS/K1T )
      ELSEIF (vs .ge. 1100.0) then
         TERM5 = ( C10T+K2T*n )*ALOG( 1100.0/K1T )
      ENDIF

C.....NOW COMPUTE THE SEDIMENT DEPTH DEPENDENCE.............
      IF (D25 .LT. 1.0) THEN
         TERM6 = C11T*(D25-1.0)
      ELSEIF (D25 .GE. 1.0 .AND. D25 .LE. 3.0) THEN
         TERM6 = 0.0
      ELSEIF (D25 .GT. 3.0)  THEN
         TERM6 = c12T*k3T*exp(-0.75)*( 1.0 - exp(-0.25*(D25-3.0)))
      ENDIF

      LnY = (TERM1+TERM2+TERM3+TERM4+TERM5+TERM6)

C.....Check SA<PGAsoil for periods less than T=0.2 sec. Set SA equal to 
C     PGASoil value if this case happens...........
      IF (period1 .lt. 0.2 .and. exp(lnY) .lt. pgasoil) then
         lnY = alog(pgasoil)
      endif

C.....Now compute the sigma value..........

C     Set the Sigma Values
c     Compute parital derivative of alog(soil amp) w.r.t. alog(rock PGA)
      if ( vs .ge. k1T) then
        dAmp_dPGA = 0.
      else
        dAmp_dPGA = k2T*pgaRock * ( -1. / (pgaRock+1.88) 
     1              + 1./ (pgaRock + 1.88*(vs/k1T)**(1.18)) )
      endif

      tau = tlnYt

C     Compute the sigma term (SigmaAF=0.3)
      sigma = sqrt (slnYT**2.0 + dAmp_dPGA*dAmp_dPGA*(slnY(1)*slnY(1)-0.3*0.3) +
     1            2.0*dAmp_dPGA*corsT*sqrt(slnYT*slnYT-0.3*0.3)*sqrt(slnY(1)*slnY(1)-0.3*0.3) )

      sigmaT = sqrt (tau*tau + sigma*sigma)

      period2 = period1

C     Convert ground motion to units of gals.
      lnY = lnY + 6.89
      sigma = sigmaT

      return
      END

c ---------------------------------------------------------------------            
C     *** Boore and Atkinson NGA (NGA-2008) ***
c ---------------------------------------------------------------------            

      subroutine BA_NGA_2008TR ( mag, Rbjf, specT, 
     1                     period2, lnY, sigma, iflag, vs, ftype, pga4nl ) 

      implicit none
    
      integer MAXPER, i, nPer
      parameter (MAXPER=23)
      REAL Period(MAXPER), e01(MAXPER), e02(MAXPER), e03(MAXPER), e04(MAXPER)
      real e05(MAXPER), e06(MAXPER), e07(MAXPER), e08(MAXPER)
      real c01(MAXPER), c02(MAXPER), c03(MAXPER), c04(MAXPER)
      real h(MAXPER), blin(MAXPER), b1(MAXPER), b2(MAXPER)
      real sigt(MAXPER), c1_TA(MAXPER), R, bnl, period1
      real a1, a2, c, d, deltaX, deltaY, specT, term1, TERM2, TERM3

      real e01p, e02p, e03p, e04p, e05p, e06p, e07p, e08p, mhp
      real c01p, c02p, c03p, c04p, rrefp, hp, c1_TAp
      real mrefp, sigma

      REAL MAG, RBJF, VS, mh(MAXPER), mref, rref, vref, v1, v2, pga_low
      real ftype, Rp
      real sigmaT, lnY, mechS, mechN, mechR, mechU, pga4nl
      INTEGER iFlag, count1, count2

      real e01T, e02T, e03T, e04T, e05T, e06T, e07T, e08T
      real c01T, c02T, c03T, c04T, hT, blinT, b1T, b2T, mhT
      real c1_TAT, period2
      
      DATA Period / 0.00, -1.00, 0.01, 0.02, 0.03, 0.05, 0.075, 0.1, 
     1              0.15, 0.2, 0.25, 0.3, 0.4, 0.5, 0.75, 1.00, 1.5, 
     2              2.00, 3.00, 4.00, 5.00, 7.5, 10.00 /
      DATA e01 / -0.53804, 5.00121, -0.52883, -0.52192, -0.45285, 
     1           -0.28476, 0.00767, 0.20109, 0.46128, 0.5718, 0.51884, 
     2            0.43825, 0.3922, 0.18957, -0.21338, -0.46896, 
     3           -0.86271, -1.22652, -1.82979, -2.24656, -1.28408, 
     4           -1.43145, -2.15446 /
      DATA e02 / -0.5035, 5.04727, -0.49429, -0.48508, -0.41831, 
     1           -0.25022, 0.04912, 0.23102, 0.48661, 0.59253, 
     2            0.53496, 0.44516, 0.40602, 0.19878, -0.19496, 
     3           -0.43443, -0.79593, -1.15514, -1.7469, -2.15906, 
     4           -1.2127, -1.31632, -2.16137 /
      DATA  e03 / -0.75472, 4.63188, -0.74551, -0.73906, -0.66722, 
     1            -0.48462, -0.20578, 0.03058, 0.30185, 0.4086, 
     2             0.3388, 0.25356, 0.21398, 0.00967, -0.49176, 
     3            -0.78465, -1.20902, -1.57697, -2.22584, -2.58228, 
     4            -1.50904, -1.81022, -2.53323 /
      DATA e04 / -0.5097, 5.0821, -0.49966, -0.48895, -0.42229, 
     1           -0.26092, 0.02706, 0.22193, 0.49328, 0.61472, 
     2            0.57747, 0.5199, 0.4608, 0.26337, -0.10813, 
     3           -0.3933, -0.88085, -1.27669, -1.91814, -2.38168, 
     4           -1.41632, -1.59217, -2.14635 /
      DATA e05 / 0.28805, 0.18322, 0.28897, 0.25144, 0.17976, 
     1           0.06369, 0.0117, 0.04697, 0.1799, 0.52729, 
     2           0.6088, 0.64472, 0.7861, 0.76837, 0.75179, 
     3           0.6788, 0.70689, 0.77989, 0.77966, 1.24961, 
     4           0.14271, 0.52407, 0.40387 /
      DATA e06 / -0.10164, -0.12736, -0.10019, -0.11006, -0.12858,
     1           -0.15752, -0.17051, -0.15948, -0.14539, -0.12964, 
     2           -0.13843, -0.15694, -0.07843, -0.09054, -0.14053, 
     3           -0.18257, -0.2595, -0.29657, -0.45384, -0.35874, 
     4           -0.39006, -0.37578, -0.48492 /
      DATA e07 / 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
     1           0.00102, 0.08607, 0.10601, 0.02262, 0, 0.10302, 
     2           0.05393, 0.19082, 0.29888, 0.67466, 0.79508, 
     3           0.0, 0.0, 0.0 /
      DATA e08 / 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
     1           0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
     2           0.0, 0.0, 0.0 /
      DATA c01 / -0.6605, -0.8737, -0.6622, -0.666, -0.6901, -0.717,
     1           -0.7205, -0.7081, -0.6961, -0.583, -0.5726, -0.5543,
     2           -0.6443, -0.6914, -0.7408, -0.8183, -0.8303, -0.8285, 
     3           -0.7844, -0.6854, -0.5096, -0.3724, -0.09824 /
      DATA c02 / 0.1197, 0.1006, 0.12, 0.1228, 0.1283, 0.1317, 0.1237,
     1           0.1117, 0.09884, 0.04273, 0.02977, 0.01955, 0.04394, 
     2           0.0608, 0.07518, 0.1027, 0.09793, 0.09432, 0.07282, 
     3           0.03758, -0.02391, -0.06568, -0.138 /
      DATA c03 / -0.01151, -0.00334, -0.01151, -0.01151, -0.01151, 
     1           -0.01151, -0.01151, -0.01151, -0.01113, -0.00952, 
     2           -0.00837, -0.0075, -0.00626, -0.0054, -0.00409,
     3           -0.00334, -0.00255, -0.00217, -0.00191, -0.00191,
     4           -0.00191, -0.00191, -0.00191 /
      DATA c04 / 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
     1           0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
     2           0.0, 0.0, 0.0 /
      DATA h / 1.35, 2.54, 1.35, 1.35, 1.35, 1.35, 1.55, 1.68, 1.86,
     1         1.98, 2.07, 2.14, 2.24, 2.32, 2.46, 2.54, 2.66, 2.73,
     2         2.83, 2.89, 2.93, 3.00, 3.04 /
      DATA blin / -0.36, -0.6, -0.36, -0.34, -0.33, -0.29, -0.23, 
     1            -0.25, -0.28, -0.31, -0.39, -0.44, -0.5, -0.6, 
     2            -0.69, -0.7, -0.72, -0.73, -0.74, -0.75, -0.75, 
     3            -0.692, -0.65 /
      DATA b1 / -0.64, -0.5, -0.64, -0.63, -0.62, -0.64, -0.64, 
     1          -0.6, -0.53, -0.52, -0.52, -0.52, -0.51, -0.5, 
     2          -0.47, -0.44, -0.4, -0.38, -0.34, -0.31, -0.291, 
     3          -0.247, -0.215 /
      DATA b2 / -0.14, -0.06, -0.14, -0.12, -0.11, -0.11, -0.11,
     1          -0.13, -0.18, -0.19, -0.16, -0.14, -0.1, -0.06, 
     2           0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 /
      DATA sigT / 0.564, 0.56, 0.566, 0.566, 0.576, 0.589, 0.606,
     1             0.608, 0.594, 0.596, 0.592, 0.608, 0.603, 0.615,
     2             0.645, 0.647, 0.679, 0.7, 0.695, 0.698, 0.744, 
     3             0.787, 0.801 /
      DATA mh / 6.75, 8.5, 6.75, 6.75, 6.75, 6.75, 6.75, 6.75, 6.75, 
     1          6.75, 6.75, 6.75, 6.75, 6.75, 6.75, 6.75, 6.75, 6.75, 
     2          6.75, 6.75, 8.5, 8.5, 8.5 /
      DATA c1_TA / 0.5500, 0.00, 0.5500, 0.5500, 0.5500, 
     1           0.5500, 0.5500, 0.5500, 0.5500, 0.5500, 
     2           0.5500, 0.5500, 0.5500, 0.5500, 0.5149, 
     3           0.4900, 0.4549, 0.4300, 0.3949, 0.3700, 
     4           0.3091, 0.2190, 0.1500 /

C     Set parameters
      mref = 4.5
      rref = 1.0
      vref = 760.0
      v1 = 180.0
      v2 = 300.0
      pga_low = 0.06
c     Parameters to compute PGA rock
      e01p = -0.53804
      e02p = -0.50350
      e03p = -0.75472
      e04p = -0.50970
      e05p = 0.28805
      e06p = -0.10164
      e07p = 0.0
      e08p = 0.0
      mhp = 6.75
      c01p = -0.66050
      c02p = 0.11970
      c03p = -0.01151
      c04p = 0.0
      mrefp = 4.5
      c1_TAp=0.55
C    Reference distance for pga4nl cases is set to 1.0km rather than
C    5.0km based on errata published on Boore web site. 
      rrefp = 1.0
      hp = 1.35

C First check for the PGA case (i.e., specT=0.0) 
      nPer = 21
      if (specT .eq. 0.0) then
         period1 = period(1)
         e01T = e01(1)
         e02T = e02(1)
         e03T = e03(1)
         e04T = e04(1)
         e05T = e05(1)
         e06T = e06(1)
         e07T = e07(1)
         e08T = e08(1)
         c01T = c01(1)
         c02T = c02(1)
         c03T = c03(1)
         c04T = c04(1)
         hT = h(1)
         blinT = blin(1)
         b1T = b1(1)
         b2T = b2(1)
         sigmaT = sigT(1)
         mhT = mh(1)
         c1_TAT=c1_TA(1)
         goto 1011
C Check for the PGV case (i.e., specT=-1.0) 
      elseif (specT .eq. -1.0) then
         period1 = period(2)
         e01T = e01(2)
         e02T = e02(2)
         e03T = e03(2)
         e04T = e04(2)
         e05T = e05(2)
         e06T = e06(2)
         e07T = e07(2)
         e08T = e08(2)
         c01T = c01(2)
         c02T = c02(2)
         c03T = c03(2)
         c04T = c04(2)
         hT = h(2)
         blinT = blin(2)
         b1T = b1(2)
         b2T = b2(2)
         sigmaT = sigT(2)
         mhT = mh(2)
         c1_TAT=c1_TA(2)
         goto 1011
      elseif (specT .gt. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=3,nper-1+2
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020 
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
      write (*,*) 
      write (*,*) 'Boore&Atkinson (NGA-2008-TR) Horizontal'
      write (*,*) 'attenuation model is not defined for a '
      write (*,*) ' spectral period of: ' 
      write (*,'(a10,f10.5)') ' Period = ',specT
      write (*,*) 'This spectral period is outside the defined'
      write (*,*) 'period range in the code or beyond the range'
      write (*,*) 'of spectral periods for interpolation.'
      write (*,*) 'Please check the input file.'
      write (*,*) 
      stop 99

C Interpolate the coefficients for the requested spectral period.
 1020       call interp (period(count1),period(count2),e01(count1),e01(count2),
     +                   specT,e01T,iflag)
            call interp (period(count1),period(count2),e02(count1),e02(count2),
     +                   specT,e02T,iflag)
            call interp (period(count1),period(count2),e03(count1),e03(count2),
     +                   specT,e03T,iflag)
            call interp (period(count1),period(count2),e04(count1),e04(count2),
     +                   specT,e04T,iflag)
            call interp (period(count1),period(count2),e05(count1),e05(count2),
     +                   specT,e05T,iflag)
            call interp (period(count1),period(count2),e06(count1),e06(count2),
     +                   specT,e06T,iflag)
            call interp (period(count1),period(count2),e07(count1),e07(count2),
     +                   specT,e07T,iflag)
            call interp (period(count1),period(count2),e08(count1),e08(count2),
     +                   specT,e08T,iflag)
            call interp (period(count1),period(count2),c01(count1),c01(count2),
     +                   specT,c01T,iflag)
            call interp (period(count1),period(count2),c02(count1),c02(count2),
     +                   specT,c02T,iflag)
            call interp (period(count1),period(count2),c03(count1),c03(count2),
     +                   specT,c03T,iflag)
            call interp (period(count1),period(count2),c04(count1),c04(count2),
     +                   specT,c04T,iflag)
            call interp (period(count1),period(count2),h(count1),h(count2),
     +                   specT,hT,iflag)
            call interp (period(count1),period(count2),blin(count1),blin(count2),
     +                   specT,blinT,iflag)
            call interp (period(count1),period(count2),b1(count1),b1(count2),
     +                   specT,b1T,iflag)
            call interp (period(count1),period(count2),b2(count1),b2(count2),
     +                   specT,b2T,iflag)
            call interp (period(count1),period(count2),mh(count1),mh(count2),
     +                   specT,mhT,iflag)
            call interp (period(count1),period(count2),sigT(count1),sigT(count2),
     +                   specT,sigmaT,iflag)
            call interp (period(count1),period(count2),c1_TA(count1),c1_TA(count2),
     +                   specT,c1_TAT,iflag)
 1011 period1 = specT                                                                                                              

C.....Set the mechanism terms based on ftype............
C     Set mechanism term and corresponding Frv and Fnm values.
C     fType     Mechanism                      Rake
C     ------------------------------------------------------
C      -1       Normal                    -120 < Rake <  -60
C     -0.5      Normal/Oblique            -150 < Rake < -120
C                                          -60 < Rake <  -30
C       0       Strike-Slip               -180 < Rake < -150
C                                          -30 < Rake <   30
C                                          150 < Rake <  180
C      0.5      Reverse/Oblique             30 < Rake <   60
C                                          120 < Rake <  150
C       1       Reverse                     60 < Rake <  120   
      if (ftype .eq. -1.0) then
         mechS = 0.0
         mechN = 1.0
         mechR = 0.0
         mechU = 0.0
      elseif (ftype .eq. -0.5) then 
         mechS = 0.0
         mechN = 1.0
         mechR = 0.0
         mechU = 0.0
      elseif (ftype .eq. 0.0) then 
         mechS = 1.0
         mechN = 0.0
         mechR = 0.0
         mechU = 0.0
      elseif (ftype .eq. 0.5) then
         mechS = 0.0
         mechN = 0.0
         mechR = 1.0
         mechU = 0.0
      elseif (ftype .eq. 1.0) then
         mechS = 0.0
         mechN = 0.0
         mechR = 1.0
         mechU = 0.0
      endif 

C.....First compute the Reference Rock PGA value.........
C.....MAGNITUDE DEPENDENCE.................................
      if (mag .le. mhp) then
         term1 = e01p*mechU + e02p*mechS + e03p*mechN + e04p*mechR +
     1           e05p*(mag-mhp) + e06p*(mag-mhp)**2.0+ c1_TAp*(mag-mhp) 
      else
         term1 = e01p*mechU + e02p*mechS + e03p*mechN + e04p*mechR +
     1           e07p*(mag-mhp) + e08p*(mag-mhp)**2.0
      endif
C.....Distance dependence......
      Rp = SQRT( Rbjf*Rbjf+hp*hp )

      TERM2 = ( c01p + c02p*(mag-mrefp) ) * alog(Rp/rrefp) + 
     1        ( c03p + c04p*(mag-mrefp) ) * (Rp-rrefp)
      pga4nl = exp(term1+term2)

C.....Now compute the requested ground motion value........
C.....MAGNITUDE DEPENDENCE.................................
      if (mag .le. mhT) then
         term1 = e01T*mechU + e02T*mechS + e03T*mechN + e04T*mechR +
     1           e05T*(mag-mhT) + e06T*(mag-mhT)**2.0+ c1_TAT*(mag-mhT)
      else
         term1 = e01T*mechU + e02T*mechS + e03T*mechN + e04T*mechR +
     1           e07T*(mag-mhT) + e08T*(mag-mhT)**2.0
      endif

C.....Distance dependence......
      R = SQRT( Rbjf*Rbjf+hT*hT )

      TERM2 = ( c01T + c02T*(mag-mref) ) * alog(R/rref) + 
     1        ( c03T + c04T*(mag-mref) ) * (R-rref)

C.....Site Response Term.........
C.....First compute Bnl slope term......
      if (vs .le. v1) then
         bnl = b1T
      elseif (vs .le. v2) then
        bnl = (b1T-b2T)*(alog(vs/v2)/alog(v1/v2)) + b2T
      elseif (vs .lt. vref) then
        bnl = b2t*alog(vs/vref)/alog(v2/vref)
      else 
        bnl = 0.0
      endif

c.....next compute the slope coefficients for model....
      a1 = 0.03
      a2 = 0.09
      deltaX = alog(a2/a1)
      deltaY = bnl*alog(a2/pga_low)
      c = (3.0*deltaY-bnl*deltaX)/(deltaX*deltaX)
      d = -1.0*(2.0*deltaY-bnl*deltaX)/(deltaX*deltaX*deltaX)

C.....Now compute the site term........
      if (pga4nl .le. a1) then
          TERM3 = blinT*alog(vs/vref) + bnl*alog(pga_low/0.1)
      elseif (pga4nl .le. a2) then
          TERM3 = blinT*alog(vs/vref) + bnl*alog(pga_low/0.1)
     1            + c*(alog(pga4nl/a1))**2.0
     2            + d*(alog(pga4nl/a1))**3.0
      elseif (pga4nl .gt. a2) then
          TERM3 = blinT*alog(vs/vref) + bnl*alog(pga4nl/0.1)
      endif

      lnY = term1 + term2 + term3

      period2 = period1

C     Convert ground motion to units of gals.
      lnY = lnY + 6.89
      sigma = sigmaT

      return
      END


 
